description: |-
  Stencil template objects expose dynamic page data. Not all objects are available on every page; which objects are present depends on page type. Below are instructions on viewing a page's context while developing locally and how to access that context's data via Handlebars expressions and JavaScript. For a complete template object reference, see [Models](https://developer.bigcommerce.com/stencil-docs/reference-docs/global-objects-and-properties/models).

  <div class="otp" id="no-index">

  ### On this Page
  - [Viewing a Page's Context](#viewing-a-pages-context)
  - [Using Handlebars](#using-handlebars)
  - [Using PageManager JavaScript](#using-pagemanager-javascript)
  - [Client-Side Injection](#client-side-injection)
  - [Resources](#resources)

  </div>

  ## Viewing a Page's Context

  To get the template context in plaintext JSON for a page served locally by Stencil CLI, add `debug=context` to the URL query string. To get the template context JSON ouput to a rendered page, use `debug=bar`. Example:
  * `http://localhost:3000/?debug=context`
  * `http://localhost:3000/?debug=bar`

  Here's a javascript bookmarklet that uses the fetch API to dump the context to the console:

  ```js
  javascript:void%20function(){fetch(window.location.pathname+%22%3Fdebug=context%22).then(function(n){n.json().then(function(n){console.log(n)})})}();
  ```

  Source:

  ```js
  fetch(window.location.pathname + "?debug=context")
  .then(function(response) {
      response.json().then(function(data){
          console.log(data);
      })
  });
  ```

  ## Using Handlebars

  The templating language used by Stencil themes is Handlebars; use it in templates to access dynamic page data:

  ```html
  {{#if page.sub_pages}}
  <nav class="navBar navBar--sub">
      <ul class="navBar-section account-navigation">
      {{#each page.sub_pages}}
          <li class="navBar-item"><a class="navBar-action" href="{{url}}">{{title}}</a></li>
      {{/each}}
      </ul>
  </nav>
  {{/if}}
  ```

  ## Using PageManager JavaScript

  JavaScript files in `assets/js/theme/` that extend the `PageManager` class have a `context` property for accessing the page context:

  ```js
  // assets/js/theme/global.js

  export default class Global extends PageManager {
      onReady() {
          cartPreview(this.context.secureBaseUrl, this.context.cartId);
          // ...
      }
      // ...
  }
  ```

  ## Client-Side Injection

  To use dynamic data from the template in client-side code, use the inject helper:

  ```html
  <!-- templates/pages/category.html -->

  {{inject "categoryId" category.id}}

  <!-- ... -->

      var jsContext = JSON.parse({{jsContext}});
  ```

  **client code:**

  ```js
  // client-side code
  console.log(jsContext.categoryId);
  ```

  ## Resources

  * [Template Object Reference](/stencil-docs/reference-docs/global-objects-and-properties/models)
title: 'Theme Objects'
type: object
properties:
  banners:
   $ref: ./banners.yml
  blog:
   $ref: ./blog.yml
  brand:
   $ref: ./brand.yml
  brands:
   $ref: ./brands.yml
  breadcrumbs:
   $ref: ./breadcrumbs.yml
  carousel:
   $ref: ./carousel.yml
  cart_id:
   $ref: ./cart_id.yml
  cart:
   $ref: ./cart.yml
  categories:
   $ref: ./categories.yml
  category:
   $ref: ./category.yml
  checkout:
   $ref: ./checkout.yml
  comparisons:
   $ref: ./comparisons.yml
  countries:
   $ref: ./countries.yml
  create_account:
   $ref: ./createAccount.yml
  currency_selector:
   $ref: ./currencySelector.yml
  customer:
   $ref: ./customer.yml
  customer_group_id:
    $ref: ./customerGroupId.yml
  customer_group_name:
    $ref: ./customerGroupName.yml
  downloads:
   $ref: ./downloads.yml
  faceted_search:
   $ref: ./facetedSearch.yml
  footer:
   $ref: ./footer.yml
  forms:
   $ref: ./forms.yml
  head:
   $ref: ./head.yml
  is_ajax:
   $ref: ./isAjax.yml
  order:
   $ref: ./order.yml
  page:
   $ref: ./page.yml
  pages:
   $ref: ./pages.yml
  pagination:
    $ref: ./pagination.yml
  page_type:
    $ref: ./pageType.yml
  product:
   $ref: ./product.yml
  products:
    $ref: ./products.yml
  remote_api_scripts:
    $ref: ./remoteApiScripts.yml
  settings:
    $ref: ./settings.yml
  shipments:
   $ref: ./shipments.yml
  shipping_messages:
    $ref: ./shippingMessages.yml
  shop_by_brand:
   $ref: ./shopByBrand.yml
  social_media:
    $ref: ./socialMedia.yml
  theme_settings:
    $ref: ./themeSettings.yml
  urls:
    $ref: ./urls.yml
  vault:
   $ref: ./vault.yml
  wishlist:
   $ref: ./wishlist.yml
