openapi: 3.0.1
info:
  title: Content
  description: >-
    Manage blog posts, blog tags, content pages, and redirects.


    <div class="HubBlock--callout">

    <div class="CalloutBlock--warning">

    <div class="HubBlock-content">


    ### Note

    * Redirects V2 are deprecated; use [V3
    Redirects](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/getredirects)
    instead.

    * Pages V2 are deprecated; use [Pages
    V3](https://developer.bigcommerce.com/api-reference/store-management/pages)
    instead. 


    </div>

    </div>

    </div>
  version: ''
servers:
  - url: https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2
security:
  - X-Auth-Token: []
tags:
  - name: Blog Posts
  - name: Blog Tags
  - name: Pages
  - name: Redirects
paths:
  /blog/tags:
    get:
      tags:
        - Blog Tags
      summary: Get All Blog Tags
      description: Returns a list of *Blog Tags*.
      operationId: getAllBlogTags
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/blogTags'
              example:
                - tag: Blog
                  post_ids:
                    - 1
                - tag: cupcakes
                  post_ids:
                    - 2
  /blog/posts:
    get:
      tags:
        - Blog Posts
      summary: Get All Blog Posts
      description: >-
        Returns all *Blog Posts*. Default sorting is by published_date,
        beginning with the most recent post.
      operationId: getAllBlogPosts
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: is_published
          in: query
          description: Filter param.
          schema:
            type: string
        - name: url
          in: query
          description: Filter param. Value must be URL encoded.
          schema:
            type: string
        - name: tag
          in: query
          description: Filter param.
          schema:
            type: string
        - name: published_date
          in: query
          description: Filter param.
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Filter param.
          schema:
            maximum: 50
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Filter param.
          schema:
            maximum: 250
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/blogPost_Full'
              example:
                - id: 3
                  title: Hello Again
                  url: /blog/hello-again/
                  preview_url: /blog/hello-again/
                  body: >-
                    <p>Jelly beans muffin marzipan gingerbread donut dessert.
                    Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                    sesame snaps jelly beans brownie chocolate tart. Marshmallow
                    jujubes candy pie. Gummies lemon drops tart soufflé pastry
                    pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                    wafer bear claw marzipan jelly-o. Dessert bear claw topping
                    icing croissant. Pie bonbon chocolate bar chocolate bar
                    tiramisu chocolate lemon drops candy.</p><p>Marshmallow
                    cupcake sweet roll candy marshmallow caramels cotton candy
                    pie icing. Powder jelly beans chupa chups lollipop liquorice
                    marzipan dessert soufflé sesame snaps. Macaroon chupa chups
                    gummies cheesecake ice cream caramels sesame snaps cotton
                    candy gingerbread. Chocolate cake fruitcake tart bear claw
                    lemon drops tart dragée tart apple pie. Halvah chupa chups
                    soufflé jelly soufflé marshmallow. Croissant tart tart.
                    Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart
                    pastry brownie chocolate bar jelly. Dragée muffin cupcake
                    liquorice caramels marzipan gingerbread marzipan. Apple pie
                    pudding jelly sweet roll croissant bonbon wafer. Cookie
                    chocolate bar sesame snaps bonbon macaroon candy canes donut
                    sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie
                    gummies donut sweet. Marzipan bear claw cotton candy topping
                    dragée bonbon danish powder.</p>
                  tags:
                    - sugar
                    - sweet
                    - spice
                    - everything
                    - nice
                  summary: >-
                    Jelly beans muffin marzipan gingerbread donut dessert.
                    Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                    sesame snaps jelly beans brownie chocolate tart. Marshmallow
                    jujubes candy pie. Gummies lemon drops tart soufflé pastry
                    pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                    wafer bear claw marzipan jelly-o. Dessert bear claw topping
                    icing croissant. Pie bonbon chocolate bar [...]
                  is_published: true
                  published_date:
                    date: 2018-05-18T08:26:42.000Z
                    timezone_type: 1
                    timezone: '+00:00'
                  published_date_iso8601: 2018-05-18T13:26:42+0000
                  meta_description: Cupcakes post 2
                  meta_keywords: sugar,sweet,spice,everything,nice
                  author: ''
                  thumbnail_path: ''
                - id: 2
                  title: Hello
                  url: /blog/hello/
                  preview_url: /blog/hello/
                  body: >-
                    <p>Jelly beans muffin marzipan gingerbread donut dessert.
                    Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                    sesame snaps jelly beans brownie chocolate tart. Marshmallow
                    jujubes candy pie. Gummies lemon drops tart soufflé pastry
                    pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                    wafer bear claw marzipan jelly-o. Dessert bear claw topping
                    icing croissant. Pie bonbon chocolate bar chocolate bar
                    tiramisu chocolate lemon drops candy.</p><p>Marshmallow
                    cupcake sweet roll candy marshmallow caramels cotton candy
                    pie icing. Powder jelly beans chupa chups lollipop liquorice
                    marzipan dessert soufflé sesame snaps. Macaroon chupa chups
                    gummies cheesecake ice cream caramels sesame snaps cotton
                    candy gingerbread. Chocolate cake fruitcake tart bear claw
                    lemon drops tart dragée tart apple pie. Halvah chupa chups
                    soufflé jelly soufflé marshmallow. Croissant tart tart.
                    Gingerbread apple pie biscuit.</p><p>Wafer lemon drops tart
                    pastry brownie chocolate bar jelly. Dragée muffin cupcake
                    liquorice caramels marzipan gingerbread marzipan. Apple pie
                    pudding jelly sweet roll croissant bonbon wafer. Cookie
                    chocolate bar sesame snaps bonbon macaroon candy canes donut
                    sugar plum. Bear claw bonbon tootsie roll bonbon. Apple pie
                    gummies donut sweet. Marzipan bear claw cotton candy topping
                    dragée bonbon danish powder.</p>
                  tags:
                    - cupcakes
                    - sugar
                    - sweet
                  summary: >-
                    Jelly beans muffin marzipan gingerbread donut dessert.
                    Cheesecake cheesecake sugar plum cookie cake tart. Soufflé
                    sesame snaps jelly beans brownie chocolate tart. Marshmallow
                    jujubes candy pie. Gummies lemon drops tart soufflé pastry
                    pie. Caramels wafer biscuit gummi bears. Liquorice toffee
                    wafer bear claw marzipan jelly-o. Dessert bear claw topping
                    icing croissant. Pie bonbon chocolate bar [...]
                  is_published: true
                  published_date:
                    date: 2018-05-18T08:26:00.000Z
                    timezone_type: 1
                    timezone: '+00:00'
                  published_date_iso8601: 2018-05-18T13:26:00+0000
                  meta_description: cupcake blog post
                  meta_keywords: cupcakes,sugar,sweet
                  author: ''
                  thumbnail_path: ''
                - id: 1
                  title: Your first blog post!
                  url: /your-first-blog-post/
                  preview_url: /your-first-blog-post/
                  body: >-
                    <p> <strong>Welcome to your blog!</strong><br> A blog is a
                    great place to share details on your products, business and
                    whatever else you think your shoppers might like to hear
                    from you. You can include photos in your blog posts and even
                    videos. For ideas and inspiration on how to structure your
                    blog, take a look at the Bigcommerce <a
                    href='http://blog.bigcommerce.com/' target='_blank'
                    rel='nofollow'>ecommerce blog</a>.</p><p><strong>How can I
                    delete this post?</strong><br>To delete this post and add
                    your own, login to your <a href='/admin'
                    target='_blank'>admin area</a> and go to Storefront > Blog
                    in the left hand menu.</p><p><strong>Powered by
                    Bigcommerce</strong><br>Your website, online store and blog
                    are powered by Bigcommerce <a
                    href='http://www.bigcommerce.com/' target='_blank'
                    rel='nofollow'>ecommerce software</a>. It includes
                    everything you need to run a beautiful online store
                    including <a href='http://www.bigcommerce.com/templates/'
                    target='_blank' rel='nofollow'>ecommerce website
                    templates</a>, <a
                    href='http://www.bigcommerce.com/features/hosting/'
                    target='_blank' rel='nofollow'>ecommerce hosting</a>, an <a
                    href='http://www.bigcommerce.com/features/setup/'
                    target='_blank' rel='nofollow'>online shopping cart</a> and
                    more.</p>
                  tags:
                    - Blog
                    - SEO
                  summary: ' Welcome to your blog! A blog is a great place to share details on your products, business and whatever else you think your shoppers might like to hear from you. You can include photos in your blog posts and even videos. For ideas and inspiration on how to structure your blog, take a look [...]'
                  is_published: true
                  published_date:
                    date: 2014-02-15T14:46:34.000Z
                    timezone_type: 1
                    timezone: '+00:00'
                  published_date_iso8601: 2014-02-15T19:46:34+0000
                  meta_description: ''
                  meta_keywords: Blog,SEO
                  author: ''
                  thumbnail_path: ''
    post:
      tags:
        - Blog Posts
      summary: Create a Blog Post
      description: >-
        Creates a *Blog Post*.


        **Required Fields**

        *   title

        *   body


        **Read Only Fields**

        *   id

        *   preview_url

        *   summary


        **Notes**


        * When including `published_date` in a request, supply it as a flat date
        string (not an object) in valid <a
        href="http://tools.ietf.org/html/rfc2822#section-3.3"
        target="_blank">RFC 2822</a>. The&#160;example request below includes a
        `published_date` in RFC 2822 format.


        * Blog posts default to draft status. To publish blog posts to the
        storefront, set their `is_published` property to `true`.

        * If a custom URL is not provided, the post’s URL will be generated
        based on the value of `title`.
      operationId: createABlogPosts
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blogPost_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blogPost_Base'
              example:
                id: 3
                title: Welcome to BigCommerce
                url: /blog/welcome-bigcommerce/
                preview_url: /blog/welcome-bigcommerce/
                body: >-
                  <p>Customize your site, manage shipping and payments, and list
                  your products on Amazon, eBay, and Facebook with the #1
                  ecommerce platform. </p>
                tags:
                  - BigCommerce
                  - welcome
                  - ecommerce
                summary: >-
                  <p>We power ecommerce websites for successful retailers all
                  over the world</p>
                is_published: true
                published_date:
                  date: 2018-05-18T08:26:42.000Z
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: 2018-05-18T13:26:42.000Z
                meta_description: Welcome Post
                meta_keywords: BigCommerce, welcome, ecommerce
                author: BigCommerce
                thumbnail_path: ''
      x-codegen-request-body-name: body
    delete:
      tags:
        - Blog Posts
      summary: Delete Blog Posts
      description: Deletes a page of `Blog Posts`.
      operationId: deleteAllBlogPosts
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Filter param.
          schema:
            maximum: 250
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Filter param.
          schema:
            maximum: 50
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '204':
          description: ''
          content: {}
  /blog/posts/{id}:
    get:
      tags:
        - Blog Posts
      summary: Get a Blog Post
      description: Returns a single *Blog Post*.
      operationId: getABlogPost
      parameters:
        - name: id
          in: path
          description: Id of the blog post.
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blogPost_Full'
              example:
                id: 3
                title: Welcome to BigCommerce
                url: /blog/welcome-bigcommerce/
                preview_url: /blog/welcome-bigcommerce/
                body: >-
                  <p>Customize your site, manage shipping and payments, and list
                  your products on Amazon, eBay, and Facebook with the #1
                  ecommerce platform. </p>
                tags:
                  - BigCommerce
                  - welcome
                  - ecommerce
                summary: >-
                  <p>We power ecommerce websites for successful retailers all
                  over the world</p>
                is_published: true
                published_date:
                  date: 2018-05-18T08:26:42.000Z
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: 2018-05-18T13:26:42.000Z
                meta_description: Welcome Post
                meta_keywords: BigCommerce, welcome, ecommerce
                author: BigCommerce
                thumbnail_path: ''
    put:
      tags:
        - Blog Posts
      summary: Update a Blog Post
      description: >
        Updates a *Blog Post*.


        **Read Only Fields**

        *   id

        *   preview_url


        **Notes**


        * When including `published_date` in a request, supply it as a flat date
        string (not an object) in valid <a
        href="http://tools.ietf.org/html/rfc2822#section-3.3"
        target="_blank">RFC 2822</a>. The&#160;example request below includes a
        `published_date` in RFC 2822 format.
      operationId: updateABlogPost
      parameters:
        - name: id
          in: path
          description: Id of the blog post.
          required: true
          schema:
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blogPost_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blogPost_Base'
              example:
                id: 3
                title: Welcome to BigCommerce
                url: /blog/welcome-bigcommerce/
                preview_url: /blog/welcome-bigcommerce/
                body: >-
                  <p>Customize your site, manage shipping and payments, and list
                  your products on Amazon, eBay, and Facebook with the #1
                  ecommerce platform. </p>
                tags:
                  - BigCommerce
                  - welcome
                  - ecommerce
                summary: >-
                  <p>We power ecommerce websites for successful retailers all
                  over the world</p>
                is_published: true
                published_date:
                  date: 2018-05-18T08:26:42.000Z
                  timezone_type: 1
                  timezone: '+00:00'
                published_date_iso8601: 2018-05-18T13:26:42.000Z
                meta_description: Welcome Post
                meta_keywords: BigCommerce, welcome, ecommerce
                author: BigCommerce
                thumbnail_path: ''
      x-codegen-request-body-name: body
    delete:
      tags:
        - Blog Posts
      summary: Delete a Blog Post
      description: Deletes a *Blog Post*.
      operationId: deleteABlogPost
      parameters:
        - name: id
          in: path
          description: Id of the blog post.
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          content: {}
  /blog/posts/count:
    get:
      tags:
        - Blog Posts
      summary: Get A Count of All Blog Posts
      description: Returns a count of all *Blog Posts*.
      operationId: getACountOfAllBlogPosts
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Response'
              example:
                count: 27
  /pages:
    get:
      tags:
        - Pages
      summary: Get All Pages
      description: >-
        Returns a list of *Pages*. Default sorting is by auto-generated ID from
        oldests to newest. This endpoint is deprecated. 
      operationId: getAllPages
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
        - name: limit
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/page_Full'
            Example:
              example:
                - id: 6
                  parent_id: 5
                  type: page
                  contact_fields: fullname,companyname,phone,orderno,rma
                  email: janedoes@example.com
                  name: Contact Form
                  url: /contact-us/
                  meta_description: ''
                  body: We are happy to answer questions or help you with...
                  mobile_body: ''
                  feed: ''
                  link: ''
                  has_mobile_version: false
                  is_visible: true
                  is_homepage: false
                  layout_file: page.html
                  sort_order: 3
                  meta_title: ''
                  search_keywords: ''
                  meta_keywords: ''
      deprecated: true
    post:
      tags:
        - Pages
      summary: Create a Page
      description: >-
        Creates a *Page*. The payload limit is 1MB. This endpoint is deprecated.


        **Required Fields**

        *   `type`

        *   `name`

        *   `link` (for a page of `type: link`)

        *   `feed` (for a page of `type: rss_feed`)

        *   `body` (for a page of `type: raw`)


        **Read Only Fields**

        *   `id`


        ## Content Type


        The default value for `content_type` is `text/html`; however, if
        `page_type` is set to `raw`, `content_type` can be changed to
        `text/javascript` or `application/json`. Updating this field allows you
        to place a JavaScript or a JSON file in the root directory.
      operationId: createAPage
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/page_Base'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_Full'
              example:
                id: 6
                parent_id: 5
                type: page
                contact_fields: fullname,companyname,phone,orderno,rma
                email: janedoes@example.com
                name: Contact Form
                url: /contact-us/
                meta_description: ''
                body: >-
                  We're happy to answer questions or help you with returns.<br
                  />Please fill out the form below if you need assistance.
                mobile_body: 0
                has_mobile_version: false
                is_visible: true
                is_homepage: false
                layout_file: page.html
                sort_order: 3
                meta_title: ''
                search_keywords: ''
                meta_keywords: ''
      deprecated: true
      x-codegen-request-body-name: body
  /pages/{id}:
    get:
      tags:
        - Pages
      summary: Get A Page
      description: Returns a *Page*. This endpoint is deprecated.
      operationId: getAPage
      parameters:
        - name: id
          in: path
          description: Id of the page.
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_Full'
              example:
                id: 1
                name: RSS Syndication
                meta_title: ''
                body: '%%Syndicate%%'
                is_visible: true
                parent_id: 0
                sort_order: 5
                meta_keywords: '0'
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: ''
                is_customers_only: false
                search_keywords: '0'
                has_mobile_version: false
                mobile_body: '0'
                url: /rss-syndication/
      deprecated: true
    put:
      tags:
        - Pages
      summary: Update a Page
      description: |-
        Updates a *Page*. The payload limit is 1MB. This endpoint is deprecated.

        **Read Only Fields**
        * id
      operationId: updateAPage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/page_Base'
        required: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page_Base'
              example:
                id: 2
                name: Shipping & Returns
                meta_title: ''
                body: >-
                  <em>To edit this page simply login to the control panel, click
                  the <strong style="font-weight: 400">Website Content</strong>
                  tab and choose the </em> <strong style="font-weight:
                  400"><em>View Web Pages option. Click Edit next to the
                  Shipping & Returns page and you can change this text. A sample
                  returns policy is shown below which you can edit as
                  needed.</em><em style="font-style:
                  normal"><br/><br/></em></strong><em style="font-style:
                  normal"><strong>Returns Policy</strong></em><strong
                  style="font-weight: 400"></em></em><em style="font-style:
                  normal"><br/><br/></em>You may return most new, unopened items
                  within 30 days of delivery for a full refund. We'll also pay
                  the return shipping costs if the return is a result of our
                  error (you received an incorrect or defective item,
                  etc.).<br/><br/>You should expect to receive your refund
                  within four weeks of giving your package to the return
                  shipper, however, in many cases you will receive a refund more
                  quickly. This time period includes the transit time for us to
                  receive your return from the shipper (5 to 10 business days),
                  the time it takes us to process your return once we receive it
                  (3 to 5 business days), and the time it takes your bank to
                  process our refund request (5 to 10 business
                  days).<br/><br/>If you need to return an item, please <a
                  href="/contact-us/">Contact Us</a> with your order number and
                  details about the product you would like to return. We will
                  respond quickly with instructions for how to return items from
                  your
                  order.<br/><br/></strong><strong>Shipping</em></em></em></strong><strong
                  style="font-weight: 400"><em style="font-style:
                  normal"><br/><br/></em>We can ship to virtually any address in
                  the world. Note that there are restrictions on some products,
                  and some products cannot be shipped to international
                  destinations.<br/><br/>When you place an order, we will
                  estimate shipping and delivery dates for you based on the
                  availability of your items and the shipping options you
                  choose. Depending on the shipping provider you choose,
                  shipping date estimates may appear on the shipping quotes
                  page.<br/><br/>Please also note that the shipping rates for
                  many items we sell are weight-based. The weight of any such
                  item can be found on its detail page. To reflect the policies
                  of the shipping companies we use, all weights will be rounded
                  up to the next full pound.<br/>
                is_visible: true
                parent_id: 0
                sort_order: 2
                meta_keywords: ''
                type: page
                meta_description: ''
                is_homepage: false
                layout_file: page.html
                is_customers_only: false
                search_keywords: ''
                has_mobile_version: false
                mobile_body: ''
                url: /shipping-returns/
      deprecated: true
      x-codegen-request-body-name: body
    delete:
      tags:
        - Pages
      summary: Delete a Page
      description: 'Deletes a *Page*. This endpoint is deprecated. '
      operationId: deleteAPage
      parameters:
        - name: id
          in: path
          description: Id of the page.
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          content: {}
      deprecated: true
  /redirects:
    get:
      tags:
        - Redirects
      summary: Get All Redirects
      description: >-
        Returns a list all *Redirect URLs*. 


        <div class="HubBlock--callout">

        <div class="CalloutBlock--warning">

        <div class="HubBlock-content">


        ### **Deprecated**


        Avoid using this API operation if possible. It will be removed in a
        future version.


        For the most up-to-date version of this API, see  [Get Redirects
        v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/getredirects)
        to manage redirects URLs.

        </div>

        </div>

        </div>
      operationId: getAListofRedirects
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: page
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: limit
          in: query
          description: Filter param.
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/redirect'
              example:
                - id: 1
                  path: /smith-journal-13/
                  forward:
                    type: product
                    ref: '111'
                  url: >-
                    http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
            Response Schema:
              example: ''
      deprecated: true
    post:
      tags:
        - Redirects
      summary: Create a Redirect
      description: >-
        Creates a *Redirect URL*.


        **Required Fields**

        *   path

        *   forward


        **Read Only**

        *   url


        <div class="HubBlock--callout">

        <div class="CalloutBlock--warning">

        <div class="HubBlock-content">


        ### **Deprecated**


        Avoid using this API operation if possible. It will be removed in a
        future version.


        For the most up-to-date version of this API, see [Upsert Redirects
        v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/upsertredirects)
        to upsert new redirect data.


        </div>

        </div>

        </div>
      operationId: createARedirect
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redirect'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect'
              example:
                id: 3
                path: /mens_clothing
                forward:
                  type: category
                  ref: 3
                url: http://store.example.com/mens
      x-codegen-request-body-name: body
    delete:
      tags:
        - Redirects
      summary: Delete All Redirects
      description: "By default, it deletes all *Redirect URLs* in a store. \n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--warning\">\n<div class=\"HubBlock-content\">\n\n### **Deprecated**\n\nAvoid using this API operation if possible. It will be removed in a future version.\n\nFor the most up-to-date version of this API, see [Delete Redirects v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/deleteredirects) to delete redirects URLs.\n\t\n</div>\n</div>\n</div>"
      operationId: deleteAllRedirects
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          content: {}
  /redirects/{id}:
    get:
      tags:
        - Redirects
      summary: Get a Redirect
      description: >
        Returns a single *Redirect URL*.


        <div class="HubBlock--callout">

        <div class="CalloutBlock--warning">

        <div class="HubBlock-content">


        ### **Deprecated**


        Avoid using this API operation if possible. It will be removed in a
        future version.


        For the most up-to-date version of this API, see [Get Redirects
        v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/getredirects)
        to get a redirect URL.


        </div>

        </div>

        </div>
      operationId: getARedirectURL
      parameters:
        - name: id
          in: path
          description: Id of the redirect url
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect'
              example:
                id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: 111
                url: >-
                  http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      deprecated: true
    put:
      tags:
        - Redirects
      summary: Update a Redirect
      description: >
        Updates a *Redirect URL*.


        **Required Fields**

        *   path

        *   forward


        **Read Only Fields**

        *   url


        <div class="HubBlock--callout">

        <div class="CalloutBlock--warning">

        <div class="HubBlock-content">


        ### **Deprecated**


        Avoid using this API operation if possible. It will be removed in a
        future version.


        For the most up-to-date version of this API, see [Upsert Redirects
        v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/upsertredirects)
        to update redirect data.


        </div>

        </div>

        </div>
      operationId: updateARedirectURL
      parameters:
        - name: id
          in: path
          description: Id of the redirect url
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Redirect
              required:
                - forward
                - path
              type: object
              properties:
                id:
                  type: integer
                  description: Numeric ID of the redirect.
                  example: 1
                path:
                  type: string
                  description: The path from which to redirect.
                  example: /smith-journal-13/
                forward:
                  type: object
                  properties:
                    type:
                      type: string
                      description: >
                        The type of redirect. If it is a manual redirect then
                        type will always be manual. Dynamic redirects will have
                        the type of the page. Such as product or category.
                      example: product
                    ref:
                      type: string
                      description: >-
                        Reference of the redirect. Dynamic redirects will have
                        the category or product number. Manual redirects will
                        have the url that is being directed to.
                      example: '111'
                url:
                  type: string
                  description: URL of the redirect. READ-ONLY
                  example: >-
                    http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
              example:
                id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: 111
                url: >-
                  http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect'
              example:
                id: 1
                path: /smith-journal-13/
                forward:
                  type: product
                  ref: 111
                url: >-
                  http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      x-codegen-request-body-name: body
    delete:
      tags:
        - Redirects
      summary: Delete a Redirect
      description: "Deletes a *Redirect URL*.\n\n<div class=\"HubBlock--callout\">\n<div class=\"CalloutBlock--warning\">\n<div class=\"HubBlock-content\">\n\n### **Deprecated**\n\nAvoid using this API operation if possible. It will be removed in a future version.\n\nFor the most up-to-date version of this API, see [Delete Redirects v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/deleteredirects) to delete a redirect URL.\n\t\n</div>\n</div>\n</div>"
      operationId: deleteARedirect
      parameters:
        - name: id
          in: path
          description: Id of the redirect url
          required: true
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            type: integer
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: ''
          content: {}
  /redirects/count:
    get:
      tags:
        - Redirects
      summary: Get a Count of Redirects
      description: >-
        Gets a count of *Redirect URLs* in a store.


        <div class="HubBlock--callout">

        <div class="CalloutBlock--warning">

        <div class="HubBlock-content">


        ### **Deprecated**


        Avoid using this API operation if possible. It will be removed in a
        future version.


        For the most up-to-date version of this API, see  [Get Redirects
        v3](https://developer.bigcommerce.com/api-reference/storefront/redirects/redirects/getredirects)
        to get a count of redirects.

        </div>

        </div>

        </div>
      operationId: getACountOfRedirects
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_Response'
              example:
                count: 27
      deprecated: true
components:
  schemas:
    blogPost_Full:
      title: blogPost_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: ID of this blog post. (READ-ONLY)
              example: 3
        - $ref: '#/components/schemas/blogPost_Base'
    addresses:
      title: addresses
      type: object
      properties:
        url:
          type: string
          description: Full URL of where the resource is located.
          example: >-
            https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2/customers/5/addresses
        resource:
          type: string
          description: Resource being accessed.
          example: /customers/5/addresses
    formField:
      title: formField
      type: object
      properties:
        name:
          type: string
          description: Name of the form field
          example: License Id
        value:
          type: string
          description: Value of the form field
          example: 123BAF
    page_Full:
      title: page_Full
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: ID of the page.
              example: 44
        - $ref: '#/components/schemas/page_Base'
    redirect:
      title: redirect
      required:
        - forward
        - path
      type: object
      properties:
        id:
          type: integer
          description: Numeric ID of the redirect.
          example: 1
        path:
          type: string
          description: The path from which to redirect.
          example: /smith-journal-13/
        forward:
          $ref: '#/components/schemas/forward'
        url:
          type: string
          description: URL of the redirect. READ-ONLY
          example: http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
      example:
        id: 1
        path: /smith-journal-13/
        forward:
          type: product
          ref: 111
        url: http://store-url.mybigcommerce.com/towels/bath-towels/hand-towels/
    forward:
      title: forward
      type: object
      properties:
        type:
          type: string
          description: >-
            The type of redirect. If it is a `manual` redirect then type will
            always be manual. Dynamic redirects will have the type of the page.
            Such as product or category.
          example: product
        ref:
          type: number
          description: >-
            Reference of the redirect. Dynamic redirects will have the category
            or product number. Manual redirects will have the url that is being
            directed to.
          example: 111
    count_Response:
      title: count_Response
      type: object
      properties:
        count:
          type: number
          description: ''
          example: 27
      example:
        count: 27
    blogTags:
      title: blogTags
      type: array
      items:
        type: object
        properties:
          tag:
            type: string
            example: Blog
          post_ids:
            type: array
            example: 1,2,4
            items:
              type: integer
    blogPost_Base:
      title: blogPost_Base
      required:
        - body
        - title
      type: object
      properties:
        title:
          type: string
          description: Title of this blog post.
          example: Welcome to BigCommerce
        url:
          type: string
          description: URL for the public blog post.
          example: /blog/welcome-bigcommerce/
        preview_url:
          type: string
          description: URL to preview the blog post. (READ-ONLY)
          example: /blog/welcome-bigcommerce/
        body:
          type: string
          description: Text body of the blog post.
          example: >-
            <p>Customize your site, manage shipping and payments, and list your
            products on Amazon, eBay, and Facebook with the #1 ecommerce
            platform. </p>
        tags:
          type: array
          description: Tags to characterize the blog post.
          items:
            type: string
        summary:
          type: string
          description: Summary of the blog post. (READ-ONLY)
          example: >-
            <p>We power ecommerce websites for successful retailers all over the
            world</p>
        is_published:
          type: boolean
          description: Whether the blog post is published.
          example: true
        published_date:
          $ref: '#/components/schemas/publishedDate'
        published_date_iso8601:
          type: string
          description: Published date in `ISO 8601` format.
          example: 5/18/2018 1:26:42 PM
        meta_description:
          type: string
          description: Description text for this blog post’s `<meta/>` element.
          example: Welcome Post
        meta_keywords:
          type: string
          description: Keywords for this blog post’s `<meta/>` element.
          example: BigCommerce, welcome, ecommerce
        author:
          type: string
          description: Name of the blog post’s author.
          example: BigCommerce
        thumbnail_path:
          type: string
          description: >-
            Local path to a thumbnail uploaded to `product_images/` via
            [WebDav](https://support.bigcommerce.com/s/article/File-Access-WebDAV).
    publishedDate:
      type: object
      properties:
        timezone_type:
          type: string
          example: '1'
        date:
          type: string
          format: date-time
          example: 2018-05-18T08:26:42.000Z
        timezone:
          type: string
          format: time
          example: '+00:00'
    page_Base:
      title: page_Base
      required:
        - body
        - feed
        - link
        - name
        - type
      type: object
      properties:
        parent_id:
          type: integer
          description: ID of any parent Web page.
          example: 5
        type:
          type: string
          description: "`page`: free-text page  \n`link`: link to another web address  \n`rss_feed`: syndicated content from an RSS feed  \n`contact_form`: When the store's contact form is used.\n\n\t"
          enum:
            - page
            - rss_feed
            - contact_form
            - raw
            - link
        contact_fields:
          type: string
          description: >-
            Where the page’s type is a contact form: object whose members are
            the fields enabled (in the control panel) for storefront display.
            Possible members are:`fullname`: full name of the customer
            submitting the form; `phone`: customer’s phone number, as submitted
            on the form; `companyname`: customer’s submitted company name;
            `orderno`: customer’s submitted order number; `rma`: customer’s
            submitted RMA (Return Merchandise Authorization) number.
          example: fullname,companyname,phone,orderno,rma
        email:
          type: string
          description: >-
            Where the page’s type is a contact form: email address that receives
            messages sent via the form.
          example: janedoes@example.com
        name:
          type: string
          description: Page name, as displayed on the storefront.
          example: Contact Form
        url:
          type: string
          description: Relative URL on the storefront for this page.
          example: /contact-us/
        meta_description:
          type: string
          description: Description contained within this page’s `<meta/>` element.
        body:
          type: string
          description: >-
            HTML or variable that populates this page’s `<body>` element, in
            default/desktop view. Required in POST if page type is `raw`.
          example: >-
            <p>We're happy to answer questions or help you with returns.<br
            />Please fill out the form below if you need assistance.</p>
        mobile_body:
          type: string
          description: >-
            HTML to use for this page's body when viewed in the mobile template
            (deprecated).
          example: '0'
        has_mobile_version:
          type: boolean
          description: If true, this page has a mobile version.
          example: false
        is_visible:
          type: boolean
          description: If true, this page appears in the storefront’s navigation menu.
          example: true
        is_homepage:
          type: boolean
          description: If true, this page is the storefront’s home page.
          example: false
        meta_title:
          type: string
          description: >-
            Text specified for this page’s `<title>` element. (If empty, the
            value of the name property is used.)
        layout_file:
          type: string
          description: >-
            Layout template for this page. This field is writable only for
            stores with a Blueprint theme applied.
          example: page.html
        sort_order:
          type: integer
          description: >-
            Order in which this page should display on the storefront. (Lower
            integers specify earlier display.)
          example: 3
        search_keywords:
          type: string
          description: >-
            Comma-separated list of keywords that shoppers can use to locate
            this page when searching the store.
        meta_keywords:
          type: string
          description: >-
            Comma-separated list of SEO-relevant keywords to include in the
            page’s `<meta/>` element.
        feed:
          type: string
          description: >-
            If page type is `rss_feed` the n this field is visisble. Required in
            POST required for `rss page` type.
        link:
          type: string
          description: >-
            If page type is `link` this field is returned. Required in  POST to
            create a `link` page.
        content_type:
          type: string
          example: text/html
          enum:
            - application/json
            - text/javascript
            - text/html
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      description: >-
        ### OAuth Scopes

        |  **UI Name** | **Permission** | **Parameter** |

        | --- | --- | --- |

        |  Content | modify | `store_v2_content` |

        |  Content | read-only | `store_v2_content_read_only` |


        ### Headers


        |Header|Parameter|Description|

        |-|-|-|

        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
        installing an app in a BigCommerce control panel.|


        ### Example


        ```http

        GET /stores/{$$.env.store_hash}/v3/catalog/summary

        host: api.bigcommerce.com

        Content-Type: application/json

        X-Auth-Token: {access_token}

        ```


        * For more information on Authenticating BigCommerce APIs, see:
        [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
      name: X-Auth-Token
      in: header
x-stoplight:
  docs:
    includeDownloadLink: false
    showModels: false
