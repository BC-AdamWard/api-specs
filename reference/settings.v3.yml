openapi: 3.0.3
info:
  contact:
    email: support@bigcommerce.com
    name: BigCommerce
    url: 'https://www.bigcommerce.com'
  description: |-
    Manage settings and configuration for BigCommerce hosted stores and headless storefronts.

    ## Authentication

    Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.

    ```http
    GET /stores/{{STORE_HASH}}/v3/settings/storefront/status
    host: api.bigcommerce.com
    Accept: application/json
    X-Auth-Token: {{ACCESS_TOKEN}}
    ```

    ### OAuth Scopes
    |  **UI Name** | **Permission** | **Parameter** |
    | --- | --- | --- |
    |  Information & Settings | modify | `store_v2_information` |
    |  Information & Settings | read-only | `store_v2_information_read_only` |
  termsOfService: 'http://www.bigcommerce.com/terms'
  title: Settings V3
  version: 3.0.0
servers:
  - description: Production API Gateway
    url: 'https://api.bigcommerce.com'
paths:
  '/stores/{store_hash}/v3/settings/data-solutions/web-analytics':
    get:
      tags:
        - Web Analytics
      operationId: getAllAnalytics
      summary: Get All Web Analytics
      description: 'Returns a list of all available Web Analytics data for a specified channel. If the `channel_id` is empty, analytic data returns for the default channel.'
      parameters:
        - name: channel_id
          in: query
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          schema:
            type: integer
        - name: store_hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |- 
            Successful operation.

            <!-- theme: info -->
            > The `200` response body returns an array of all analytics objects. View each individual analytics type by clicking the dropdown next to **data**

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
              examples:
                Example:
                  value:
                    data:
                      - channel_id: 1
                        id: 1
                        name: Google Analytics
                        tracking_code: GA-1234567890
                        property_id: GA-1234567890
                        enabled: true
                        data_tag_enabled: true
                        version: 1
                      - channel_id: 1
                        id: 2
                        name: Visual Website Optimizer
                        vwo_smartcode: VWO-1234567890
                        enabled: true
                      - channel_id: 1
                        id: 3
                        name: Facebook Pixel
                        pixel_id: FP-1234567890
                        enabled: true
                        is_oauth_connected: true
                      - channel_id: 2
                        id: 4
                        name: Segment.com
                        api_key: SEG-1234567890
                        enabled: true
                        data_tag_enabled: true
                      - channel_id: 2
                        id: 6
                        name: Site Verification Tags
                        verification_tag: <meta name="google-site-verification" content="twLOPnFqwX5JK2-RksTZp_QEkfUPPgfGJ0_UHrEKLcY" />
                        enabled: true
                      - channel_id: 2
                        id: 7
                        name: Affiliate Conversion Tracking
                        connection: <script>js code here...</script>
                        enabled: true
                    meta: {}
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
  '/stores/{store_hash}/v3/settings/data-solutions/web-analytics/{id}':
    get:
      tags:
        - Web Analytics
      operationId: getAnalytic
      summary: Get a Web Analytic
      description: 'Returns a single Web Analytics data for a specified channel. If the `channel_id` is empty, analytic data returns for the default channel.'
      parameters:
        - name: channel_id
          in: query
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          schema:
            type: integer
        - name: id
          in: path
          description: Web Analytic ID.
          required: true
          schema:
            type: integer
        - name: store_hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytic'
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '404':
          description: The requested resource was not found. Please specify valid Web Analytic ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
    put:
      tags:
        - Web Analytics
      operationId: updateAnalytic
      summary: Updates a Web Analytic
      description: 'Updates a single Web Analytics data for a specified channel. If `channel_id` is not set, analytic data updates for a default channel.'
      parameters:
        - name: channel_id
          in: query
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          schema:
            type: integer
        - name: id
          in: path
          description: Web Analytic ID.
          required: true
          schema:
            type: integer
        - name: store_hash
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: A JSON Web Analytic object
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AnalyticGoogle'
                - $ref: '#/components/schemas/AnalyticVisualWebsiteOptimizer'
                - $ref: '#/components/schemas/AnalyticFacebookPixel'
                - $ref: '#/components/schemas/AnalyticSegment'
                - $ref: '#/components/schemas/AnalyticSiteVerificationTags'
                - $ref: '#/components/schemas/AnalyticAffiliateConversionTracking'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytic'
        '400':
          description: Bad request. Authentication Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400'
        '404':
          description: The requested resource was not found. Please specify valid Web Analytic ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
        '409':
          description: Web Analytic was in conflict with another Web Analytic. This can be caused by duplicated unique values (such as ID).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
        '422':
          description: 'Web Analytic data was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse422'
  '/stores/{store_hash}/v3/settings/catalog':
    get:
      summary: Get Catalog Settings
      description: |-
        Returns catalog settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CatalogSettings'
                  meta:
                    type: object
      tags:
        - Catalog
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Catalog Settings
      description: |-
        Updates catalog settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        description: null set for a particular field removes override on a channel level and means inheritance from a global level
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSettings'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CatalogSettings'
                  meta:
                    type: object
      tags:
        - Catalog
  '/stores/{store_hash}/v3/settings/email-statuses':
    get:
      operationId: get-settings-emails-enabled
      summary: Get Transactional Email Settings
      description: Get global transactional email settings or channel specific overrides by `channel_id`.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      abandoned_cart_email: true
                      account_details_changed_email: true
                      combined_order_status_email: true
                      createaccount_email: true
                      createguestaccount_email: true
                      giftcertificate_email: true
                      invoice_email: true
                      ordermessage_notification: true
                      product_review_email: false
                      return_confirmation_email: true
                      return_statuschange_email: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnabledTransactionalEmails'
                  meta:
                    type: object
      tags:
        - Email Statuses
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      operationId: put-settings-transactional-emails-enabled
      summary: Update Transactional Email Settings
      description: Update global transactional email settings or create channel specific overrides by `channel_id`.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  abandoned_cart_email: true
                  account_details_changed_email: true
                  combined_order_status_email: true
                  createaccount_email: true
                  createguestaccount_email: true
                  giftcertificate_email: true
                  invoice_email: true
                  ordermessage_notification: true
                  product_review_email: false
                  return_confirmation_email: true
                  return_statuschange_email: true
            schema:
              $ref: '#/components/schemas/EnabledTransactionalEmails'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      abandoned_cart_email: true
                      account_details_changed_email: true
                      combined_order_status_email: true
                      createaccount_email: true
                      createguestaccount_email: true
                      giftcertificate_email: true
                      invoice_email: true
                      ordermessage_notification: true
                      product_review_email: false
                      return_confirmation_email: true
                      return_statuschange_email: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/EnabledTransactionalEmails'
                  meta:
                    type: object
      tags:
        - Email Statuses
  '/stores/{store_hash}/v3/settings/favicon/image':
    parameters:
      - $ref: '#/components/parameters/store_hash'
    post:
      operationId: post-favicon-logo-image
      summary: Create Favicon Image
      description: |-
        Uploads an image file to use as the storefront favicon. Supported MIME types include GIF, JPEG, and PNG. 

          - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FaviconFile:
                  type: string
                  format: binary
      responses:
        '204':
          description: OK
      tags:
        - Favicon Image
  '/stores/{store_hash}/v3/settings/inventory/notifications':
    get:
      summary: Get Inventory Notifications Settings
      description: |-
        Returns inventory notification settings. 
        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              examples: {}
              schema:
                allOf:
                  - properties:
                      data:
                        $ref: '#/components/schemas/InventoryNotificationsSettings'
                    type: object
                  - $ref: 'https://raw.githubusercontent.com/bigcommerce/api-specs/master/reference/global_refs.yaml#/components/schemas/meta_Empty'
      tags:
        - Inventory
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Inventory Notifications Settings
      description: |-
        Updates inventory notification settings. 
        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only. 
        * Supplying `null` settings values per channel will delete overrides per given channel and values will be inherited from global level. 
        * Partial updates are not supported within the given endpoint. In order to delete overrides per channel, `null` should be supplied for all the settings within the given endpoint.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        description: null set for a particular field removes override on a channel level and means inheritance from a global level
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryNotificationsSettings'
      responses:
        '200':
          description: OK
      tags:
        - Inventory
  '/stores/{store_hash}/v3/settings/logo':
    get:
      operationId: get-settings-logo
      summary: Get Store Logo Settings
      description: |-
        Returns store logo settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LogoSettings'
                  meta:
                    type: object
      tags:
        - Logo
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      operationId: put-settings-logo
      summary: Update Store Logo Settings
      description: |-
        Updates the logo type and logo text for a textual logo. To upload new images, use the dedicated image POST endpoints.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoSettingsUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LogoSettings'
                  meta:
                    type: object
      tags:
        - Logo
  '/stores/{store_hash}/v3/settings/logo/image':
    parameters:
      - $ref: '#/components/parameters/store_hash'
    post:
      operationId: post-settings-logo-image
      summary: Create Logo Image
      description: |-
        Uploads an image file to use as the storefront logo. Supported MIME types include GIF, JPEG, and PNG. 

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                LogoFile:
                  type: string
                  format: binary
      responses:
        '204':
          description: OK
      tags:
        - Logo Image
  '/stores/{store_hash}/v3/settings/search/filters':
    get:
      operationId: getEnabled
      summary: Get Enabled Filters
      description: 'Returns a list of enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters. These filters will be used if a store does not have contextual overrides.'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      - collapsed_by_default: false
                        display_name: Size
                        display_product_count: true
                        id: U123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: false
                        display_name: Brand
                        display_product_count: true
                        id: Y123=
                        is_enabled: true
                        items_to_show: 12
                        sort_by: alpha
                        type: brand
                      - collapsed_by_default: false
                        display_name: Color
                        display_product_count: true
                        id: Q123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: true
                        display_name: Ships for Free
                        display_product_count: false
                        id: Y456=
                        is_enabled: true
                        show_free_shipping_filter: true
                        show_in_stock_filter: true
                        show_is_featured_filter: true
                        type: other
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    type: object
      tags:
        - Search Filters
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      operationId: updateEnabled
      summary: Update Enabled Filters
      description: 'Updates enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters.'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  - collapsed_by_default: false
                    display_name: Size
                    display_product_count: true
                    id: U123=
                    is_enabled: true
                    items_to_show: 12
                    sort_by: alpha
                    type: product
                  - collapsed_by_default: false
                    display_name: Brand
                    display_product_count: true
                    id: Y123=
                    is_enabled: true
                    items_to_show: 10
                    sort_by: alpha
                    type: brand
                  - collapsed_by_default: false
                    display_name: Color
                    display_product_count: true
                    id: Q123=
                    is_enabled: true
                    items_to_show: 10
                    sort_by: alpha
                    type: product
                  - collapsed_by_default: true
                    display_name: Ships for Free
                    display_product_count: true
                    id: Y456=
                    is_enabled: true
                    show_free_shipping_filter: true
                    show_in_stock_filter: true
                    show_is_featured_filter: true
                    type: other
            schema:
              $ref: '#/components/schemas/ConfiguredFilters'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      - collapsed_by_default: false
                        display_name: Size
                        display_product_count: true
                        id: U123==
                        is_enabled: true
                        items_to_show: 12
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: false
                        display_name: Brand
                        display_product_count: true
                        id: Y123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: brand
                      - collapsed_by_default: false
                        display_name: Color
                        display_product_count: true
                        id: Q123=
                        is_enabled: true
                        items_to_show: 10
                        sort_by: alpha
                        type: product
                      - collapsed_by_default: true
                        display_name: Ships for Free
                        display_product_count: true
                        id: Y456=
                        is_enabled: true
                        show_free_shipping_filter: true
                        show_in_stock_filter: true
                        show_is_featured_filter: true
                        type: other
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConfiguredFilters'
                  meta:
                    type: object
      tags:
        - Search Filters
  '/stores/{store_hash}/v3/settings/search/filters/available':
    get:
      operationId: getAvailable
      summary: Get Available Filters
      description: 'Returns a list of filters available to power [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings).'
      parameters:
        - name: channel_id
          in: query
          description: Narrows the list of available filters based on channel ID. Only products currently assigned to the given Channel will be considered.
          schema:
            type: integer
        - name: category_id
          in: query
          description: 'Narrows the list of available filters based on category ID. You can display settings to show products from the provided category, subcategories only, or both the category and its child categories.'
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      - id: Y2F0Zooo123=
                        name: Category
                        product_count: 7
                        type: category
                      - id: YnJh123=
                        name: Brand
                        product_count: 8
                        type: brand
                      - id: cmF0a123
                        name: Rating
                        product_count: 1
                        type: rating
                      - id: cHJp123=
                        name: Price
                        price_range_max: 300.99
                        price_range_min: 6.75
                        type: price
                      - id: U2l123==
                        name: Size
                        product_count: 3
                        type: product
                      - id: Q29s123=
                        name: Color
                        product_count: 2
                        type: product
                      - id: Ym9123==
                        name: Other
                        type: other
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvailableFilter'
                  meta:
                    type: object
      tags:
        - Search Filters
    parameters:
      - $ref: '#/components/parameters/store_hash'
  '/stores/{store_hash}/v3/settings/search/filters/contexts':
    get:
      operationId: getContexts
      summary: Get Contextual Filters
      description: |-
        Returns a list of contextual filters enabled for a particular channel or category.

        **Usage Notes**

        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.

        The order of the returned filters will match the sort order of the filters on the storefront.
      parameters:
        - name: channel_id
          in: query
          description: Only return contextual overrides related to a particular Channel.
          schema:
            type: integer
        - name: category_id
          in: query
          description: Only return contextual overrides related to a particular Category.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                  meta:
                    $ref: '#/components/schemas/MetaPaginationObject'
      tags:
        - Search Filters
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      operationId: upsertContexts
      summary: Upsert Contextual Filters
      description: |-
        Upserts contextual filters for a particular channel or category.

        **Usage Notes**

        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.

        You can change the order of the filters on the live site by changing the order of the filters you send.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ConfiguredFiltersOverride'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfiguredFiltersOverride'
                  meta:
                    type: object
      tags:
        - Search Filters
  '/stores/{store_hash}/v3/settings/store/locale':
    get:
      summary: Get Locale Settings
      description: Returns global locale settings.
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      default_shopper_language: en
                      shopper_language_selection_method: default_shopper_language
                      store_country: United States
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Locale'
                  meta:
                    type: object
      tags:
        - Store Locale
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Locale Settings
      description: Updates global locale settings.
      requestBody:
        content:
          application/json:
            examples:
              Example:
                value:
                  default_shopper_language: en
                  shopper_language_selection_method: default_shopper_language
                  store_country: United States
            schema:
              $ref: '#/components/schemas/Locale'
      responses:
        '200':
          description: ''
          content:
            application/json:
              examples:
                Example:
                  value:
                    data:
                      default_shopper_language: en
                      shopper_language_selection_method: default_shopper_language
                      store_country: United States
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Locale'
                  meta:
                    type: object
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Store Locale
  '/stores/{store_hash}/v3/settings/store/profile':
    get:
      summary: Get Store Profile Settings
      description: |-
        Returns store profile settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StoreProfile'
                  meta:
                    type: object
      tags:
        - Store Profile
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Store Profile Settings
      description: |-
        Updates store profile settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreProfile'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StoreProfile'
                  meta:
                    type: object
        '422':
          description: Provided settings could not be applied for some reason - detailed errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Store Profile
  '/stores/{store_hash}/v3/settings/storefront/category':
    get:
      summary: Get Storefront Category Settings
      description: |-
        Returns category settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    type: object
      tags:
        - Storefront Category
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Storefront Category Settings
      description: |-
        Updates category settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontCategorySettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontCategorySettings'
                  meta:
                    type: object
        '422':
          $ref: '#/components/responses/422ErrorResp'
      tags:
        - Storefront Category
  '/stores/{store_hash}/v3/settings/storefront/product':
    get:
      operationId: get-settings-storefront-product
      summary: Get Storefront Product Settings
      description: |-
        Returns product settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          $ref: '#/components/responses/200-storefront-product-settings'
      tags:
        - Storefront Product
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      operationId: put-settings-storefront-product
      summary: Update Storefront Product Settings
      description: |-
        Updates product settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontProductSettings'
      responses:
        '200':
          $ref: '#/components/responses/200-storefront-product-settings'
        '422':
          $ref: '#/components/responses/422ErrorResp'
      tags:
        - Storefront Product
  '/stores/{store_hash}/v3/settings/storefront/robotstxt':
    get:
      summary: Get Robots.txt Settings
      description: |-
        Returns Robots.txt settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      robots_txt_ssl: string
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    type: object
      tags:
        - Storefront Robotstxt
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Robots.txt Settings
      description: |-
        Updates Robots.txt settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RobotsTxtSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/RobotsTxtSettings'
                  meta:
                    type: object
      tags:
        - Storefront Robotstxt
  '/stores/{store_hash}/v3/settings/storefront/search':
    get:
      operationId: ''
      summary: Get Storefront Search Settings
      description: |-
        Returns search settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      content_product_sort: relevance
                      default_product_sort: bestselling
                      product_filtering_enabled: true
                      search_suggest: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    type: object
      tags:
        - Storefront Search
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Storefront Search Settings
      description: |-
        Updates search settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  content_product_sort: relevance
                  default_product_sort: featured
                  product_filtering_enabled: true
                  search_suggest: true
            schema:
              $ref: '#/components/schemas/StorefrontSearchSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      content_product_sort: relevance
                      default_product_sort: featured
                      product_filtering_enabled: true
                      search_suggest: true
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSearchSettings'
                  meta:
                    type: object
      tags:
        - Storefront Search
  '/stores/{store_hash}/v3/settings/storefront/security':
    get:
      summary: Get Storefront Security Settings
      description: |-
        Returns security settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSecuritySettings'
                  meta:
                    type: object
      tags:
        - Storefront Security
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Storefront Security Settings
      description: |-
        Updates security settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorefrontSecuritySettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontSecuritySettings'
                  meta:
                    type: object
      tags:
        - Storefront Security
  '/stores/{store_hash}/v3/settings/storefront/seo':
    get:
      summary: Get Storefront SEO Settings
      description: |-
        Returns SEO settings.

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      meta_description: Your BigCommerce Store
                      meta_keywords: ''
                      page_title: BigCommerce Store
                      www_redirect: no-www
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    type: object
      tags:
        - Storefront SEO
    parameters:
      - $ref: '#/components/parameters/store_hash'
    put:
      summary: Update Storefront SEO Settings
      description: |-
        Updates SEO settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  meta_description: Your BigCommerce Store
                  meta_keywords: ''
                  page_title: New BigCommerce Store
                  www_redirect: no-www
            schema:
              $ref: '#/components/schemas/SEOSettings'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/SEOSettings'
                  meta:
                    type: object
        '422':
          $ref: '#/components/responses/422ErrorResp'
      tags:
        - Storefront SEO
  '/stores/{store_hash}/v3/settings/storefront/status':
    get:
      summary: Get Storefront Status
      description: |-
        Returns storefront status-related settings. 

         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      responses:
        '200':
          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: Down for maintenance
                      prelaunch_message: Prelaunch
                      prelaunch_password: mezt1f77gd
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    type: object
      tags:
        - Storefront Status
    parameters:
      - $ref: 'https://raw.githubusercontent.com/bigcommerce/api-specs/master/reference/global_refs.yaml#/components/parameters/store_hash'
    put:
      summary: Update Storefront Status
      description: |-
        Updates storefront status-related settings.

         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. 

         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.
      parameters:
        - $ref: '#/components/parameters/ChannelIdParam'
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  down_for_maintenance_message: Down for maintenance
                  prelaunch_message: Coming soon
            schema:
              $ref: '#/components/schemas/StorefrontStatus'
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                example-1:
                  value:
                    data:
                      down_for_maintenance_message: Down for maintenance
                      prelaunch_message: Coming soon
                      prelaunch_password: mezt1f77gd
                    meta: {}
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/StorefrontStatus'
                  meta:
                    type: object
      tags:
        - Storefront Status
components:
  parameters:
    ChannelIdParam:
      description: 'Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only.'
      in: query
      name: channel_id
      schema:
        type: integer
    KeysToDelete:
      description: Array of strings (CSV) representing which configuration keys should be cleared (un-overridden) for the Channel.
      in: query
      name: keys
      required: true
      schema:
        type: array
        items:
          type: string
    RequiredChannelIdParamForDelete:
      description: 'Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.'
      in: query
      name: channel_id
      required: true
      schema:
        type: integer
    store_hash:
      description: Hash of your store
      in: path
      name: store_hash
      required: true
      schema:
        type: string
        example: 29iql3rwa6
  schemas:
    AddressTypeEnumValues:
      description: Only supports manipulation on a global level.
      type: string
      default: Home Office
      enum:
        - Home Office
        - Commercial Office
        - Retail
        - Warehouse
      title: AddressTypeEnumValues
      x-tags:
        - Models
    Analytics:
      type: object
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/AnalyticGoogle'
              - $ref: '#/components/schemas/AnalyticVisualWebsiteOptimizer'
              - $ref: '#/components/schemas/AnalyticFacebookPixel'
              - $ref: '#/components/schemas/AnalyticSegment'
              - $ref: '#/components/schemas/AnalyticSiteVerificationTags'
              - $ref: '#/components/schemas/AnalyticAffiliateConversionTracking'
        meta:
          type: object
    Analytic:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/AnalyticGoogle'
            - $ref: '#/components/schemas/AnalyticVisualWebsiteOptimizer'
            - $ref: '#/components/schemas/AnalyticFacebookPixel'
            - $ref: '#/components/schemas/AnalyticSegment'
            - $ref: '#/components/schemas/AnalyticSiteVerificationTags'
            - $ref: '#/components/schemas/AnalyticAffiliateConversionTracking'
        meta:
          type: object
          properties: {}
    AnalyticGoogle:
      type: object
      title: Google Analytic
      properties:
        channel_id:
          type: integer
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          example: 1
        id:
          type: integer
          description: Web Analytic ID.
          example: 1
        name:
          type: string
          description: Web Analytic title.
          example: Google Analytics
        tracking_code:
          type: string
          description: Google Analytic tracking code. Required when version is 1
          example: GA-1234567890
        property_id:
          type: string
          description: Google Analytic property ID. Required when version is 2
          example: GA-1234567890
        enabled:
          type: boolean
          description: Flag indicates if Web Analytic is enabled or not.
        data_tag_enabled:
          type: boolean
          description: Flag indicates if data tags are enabled by Google Analytic.
        version:
          type: integer
          description: Google Analytic version.
          example: 1
    AnalyticVisualWebsiteOptimizer:
      type: object
      title: Visual Website Optimizer Analytic
      properties:
        channel_id:
          type: integer
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          example: 1
        id:
          type: integer
          description: Web Analytic ID.
          example: 2
        name:
          type: string
          description: Web Analytic title.
          example: Visual Website Optimizer
        vwo_smartcode:
          type: string
          description: Visual Website Optimizer Smartcode.
          example: VWO-1234567890
        enabled:
          type: boolean
          description: Flag indicates if Web Analytic is enabled or not.
    AnalyticFacebookPixel:
      type: object
      title: Facebook Pixel Analytic
      properties:
        channel_id:
          type: integer
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          example: 1
        id:
          type: integer
          description: Web Analytic ID.
          example: 3
        name:
          type: string
          description: Web Analytic title.
          example: Facebook Pixel
        pixel_id:
          type: string
          description: Facebook Pixel ID.
          example: FP-1234567890
        enabled:
          type: boolean
          description: Flag indicates if Web Analytic is enabled or not.
        is_oauth_connected:
          type: boolean
          description: Flag indicates if specific integration service grant OAuth token for Bigcommerce Store
    AnalyticSegment:
      type: object
      title: Segment Analytic
      properties:
        channel_id:
          type: integer
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          example: 2
        id:
          type: integer
          description: Web Analytic ID.
          example: 4
        name:
          type: string
          description: Web Analytic title.
          example: Segment.com
        api_key:
          type: string
          description: Segment API key.
          example: SEG-1234567890
        enabled:
          type: boolean
          description: Flag indicates if Web Analytic is enabled or not.
        data_tag_enabled:
          type: boolean
          description: Flag indicates if data tags are enabled by Segment Analytic.
    AnalyticSiteVerificationTags:
      type: object
      title: Site Verification Tags Analytic
      properties:
        channel_id:
          type: integer
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          example: 2
        id:
          type: integer
          description: Web Analytic ID.
          example: 6
        name:
          type: string
          description: Web Analytic title.
          example: Site Verification Tags
        verification_tag:
          type: string
          description: Site Verification Tag. May contain HTML meta tags.
          example: <meta name="google-site-verification" content="twLOPnFqwX5JK2-RksTZp_QEkfUPPgfGJ0_UHrEKLcY" />
        enabled:
          type: boolean
          description: Flag indicates if Web Analytic is enabled or not.
    AnalyticAffiliateConversionTracking:
      type: object
      properties:
        channel_id:
          type: integer
          description: 'Channel ID. If empty, the default Channel ID will be used.'
          example: 2
        id:
          type: integer
          description: Web Analytic ID.
          example: 7
        name:
          type: string
          description: Web Analytic title.
          example: Affiliate Conversion Tracking
        connection:
          type: string
          description: Connection code. May contain scripts.
          example: <script>js code here...</script>
        enabled:
          type: boolean
          description: Flag indicates if Web Analytic is enabled or not.
      title: Affiliate Conversion Tracking Analytic    
    AvailableFilter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/AvailableNormalFilter'
        - $ref: '#/components/schemas/AvailablePriceFilter'
        - $ref: '#/components/schemas/AvailableOtherFilter'
      title: AvailableFilter
      x-internal: false
    AvailableNormalFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        product_count:
          type: integer
        type:
          type: string
          enum:
            - category
            - brand
            - rating
            - product
      title: AvailableNormalFilter
      x-tags:
        - Models
    AvailableOtherFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - other
      title: AvailableOtherFilter
      x-internal: false
    AvailablePriceFilter:
      description: ''
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price_range_max:
          type: number
        price_range_min:
          type: number
        type:
          type: string
          enum:
            - price
      title: AvailablePriceFilter
      x-internal: false
    BaseError:
      description: |
        Error payload for the BigCommerce API.
      type: object
      properties:
        instance:
          type: string
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: false
    CatalogSettings:
      type: object
      properties:
        auto_approve_reviews:
          type: boolean
        enable_product_comparisons:
          type: boolean
      x-tags:
        - Models
    CategoryListingModeEnumValues:
      type: string
      enum:
        - current_category_only
        - child_categories
        - child_categories_if_category_empty
      title: CategoryListingModeEnumValues
      x-tags:
        - Models
    ConfiguredFilter:
      oneOf:
        - $ref: '#/components/schemas/EnabledProductFilter'
        - $ref: '#/components/schemas/EnabledPriceFilter'
        - $ref: '#/components/schemas/EnabledCategoryFilter'
        - $ref: '#/components/schemas/EnabledBrandFilter'
        - $ref: '#/components/schemas/EnabledRatingFilter'
        - $ref: '#/components/schemas/EnabledMiscFilter'
      title: ConfiguredFilter
      x-internal: false
    ConfiguredFilters:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredFilter'
      title: ConfiguredFilters
      x-internal: false
    ConfiguredFiltersOverride:
      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'
      type: object
      properties:
        context:
          $ref: '#/components/schemas/SearchFilterOverrideContextIdentifier'
        data:
          $ref: '#/components/schemas/ConfiguredFilters'
      title: ConfiguredFiltersOverride
      x-internal: false
    ContentSortEnumValues:
      type: string
      default: relevance
      enum:
        - relevance
        - atoz
        - ztoa
      title: ContentSortEnumValues
      x-internal: false
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
      x-internal: false
    EnabledBrandFilter:
      description: A storefront filter for product brand
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: string
        is_enabled:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        sort_by:
          type: string
          enum:
            - alpha
            - item_count
        type:
          type: string
          enum:
            - brand
      title: EnabledBrandFilter
      x-internal: false
    EnabledCategoryFilter:
      description: A storefront filter for product category
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: string
        is_enabled:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        type:
          type: string
          enum:
            - category
      title: EnabledCategoryFilter
      x-internal: false
    EnabledFilter:
      oneOf:
        - $ref: '#/components/schemas/EnabledProductFilter'
        - $ref: '#/components/schemas/EnabledPriceFilter'
        - $ref: '#/components/schemas/EnabledCategoryFilter'
        - $ref: '#/components/schemas/EnabledBrandFilter'
        - $ref: '#/components/schemas/EnabledRatingFilter'
        - $ref: '#/components/schemas/EnabledMiscFilter'
      title: EnabledFilter
      x-internal: false
    EnabledFilters:
      type: array
      items:
        $ref: '#/components/schemas/EnabledFilter'
      title: EnabledFilters
      x-internal: false
    EnabledFiltersOverride:
      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnabledFilters'
        scope:
          $ref: '#/components/schemas/SearchFilterOverrideScopeIdentifier'
      title: EnabledFiltersOverride
      x-internal: false
    EnabledMiscFilter:
      description: Miscellaneous Filters which appear as a group.
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: integer
        is_enabled:
          type: boolean
        show_free_shipping_filter:
          type: boolean
        show_in_stock_filter:
          type: boolean
        show_is_featured_filter:
          type: boolean
        show_product_count:
          type: boolean
        type:
          type: string
          enum:
            - other
      title: EnabledMiscFilter
      x-internal: false
    EnabledPriceFilter:
      description: 'A filter based on the product’s price, shown as a price range on the storefront.'
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        id:
          type: string
        is_enabled:
          type: boolean
        type:
          type: string
          enum:
            - price
      title: EnabledPriceFilter
      x-internal: false
    EnabledProductFilter:
      description: A filter that uses product options and custom field data.
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        display_product_count:
          type: boolean
        id:
          type: string
        is_enabled:
          type: boolean
        items_to_show:
          type: integer
          enum:
            - 5
            - 10
            - 15
        sort_by:
          type: string
          enum:
            - alpha
            - option_values
            - item_count
        type:
          type: string
          enum:
            - product
      title: EnabledProductFilter
      x-internal: false
    EnabledRatingFilter:
      description: A filter based on product review ratings.
      type: object
      properties:
        collapsed_by_default:
          type: boolean
        display_name:
          type: string
        id:
          type: string
        is_enabled:
          type: boolean
        type:
          type: string
          enum:
            - rating
      title: EnabledRatingFilter
      x-internal: false
    EnabledTransactionalEmails:
      type: object
      properties:
        abandoned_cart_email:
          type: boolean
        account_details_changed_email:
          type: boolean
        combined_order_status_email:
          type: boolean
        create_account_email:
          type: boolean
        create_guest_account_email:
          type: boolean
        gift_certificate_email:
          type: boolean
        invoice_email:
          type: boolean
        order_message_notification_email:
          type: boolean
        product_review_email:
          type: boolean
        return_confirmation_email:
          type: boolean
        return_statuschange_email:
          type: boolean
      title: ''
      x-internal: false
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      x-internal: false
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
          type: object
      x-internal: false
    ErrorResponse400:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse404:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse409:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    ErrorResponse422:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Error'
      x-internal: false
    HSTSMaxAgeEnumValues:
      type: string
      enum:
        - zero_seconds
        - five_minutes
        - one_year
      title: HSTSMaxAgeEnumValues
      x-tags:
        - Models
    InventoryNotificationsSettings:
      type: object
      properties:
        low_stock_notification_addresses:
          type: array
          items:
            type: string
        out_of_stock_notification_addresses:
          type: array
          items:
            type: string
      x-tags:
        - Models
    Locale:
      description: 'The basic locale settings for a store, used to give shopper information about languages, countries, etc.'
      type: object
      properties:
        default_shopper_language:
          type: string
          example: 'en, en-us'
          default: en
        shopper_language_selection_method:
          description: |-
            Determines whether to display the storefront content in the shopper's browser language or the shopper's selected default language.

            Available values:
            * `browser` - language updates automatically based on the shopper browser language. Multiple languages are supported.
            * `default_shopper_language` - content is displayed in a single language based on the set `default_shopper_language`. Only the selected language is supported.
          type: string
          example: default_shopper_language
          default: default_shopper_language
          enum:
            - browser
            - default_shopper_language
        store_country:
          type: string
          default: United States
      required:
        - default_shopper_language
      x-internal: false
    LogoSettings:
      type: object
      properties:
        favicon_url:
          type: string
        logo_image_url:
          type: string
        logo_text:
          type: string
        type:
          type: string
          enum:
            - image
            - text
      x-internal: false
    LogoSettingsUpdate:
      type: object
      properties:
        logo_text:
          type: string
        type:
          type: string
          enum:
            - image
            - text
      x-tags:
        - Models
    MetaPaginationObject:
      type: object
      properties:
        pagination:
          type: object
          properties:
            count:
              type: integer
              example: 5
              minimum: 0
            current_page:
              type: integer
              example: 1
              minimum: 1
            links:
              type: object
              properties:
                current:
                  type: string
                  example: '?limit=5&page=1'
                next:
                  type: string
                  example: '?limit=5&page=2'
            per_page:
              type: integer
              example: 5
              minimum: 0
            total:
              type: integer
              example: 246
              minimum: 0
            total_pages:
              type: integer
              example: 50
              minimum: 0
      x-internal: false
    ProductSortEnumValues:
      description: The available sorts for PLP pages.
      type: string
      default: bestselling
      enum:
        - featured
        - bestselling
        - newest
        - atoz
        - ztoa
        - highestprice
        - lowestprice
        - bestreviewed
      title: ProductSortEnumValues
      x-internal: false
    RobotsTxtSettings:
      type: object
      properties:
        robots_txt_ssl:
          type: string
      x-internal: false
    SEOSettings:
      type: object
      properties:
        meta_description:
          type: string
        meta_keywords:
          type: string
        page_title:
          type: string
        www_redirect:
          type: string
          enum:
            - www
            - no-www
            - none
      x-internal: false
    SearchFilterOverrideContextIdentifier:
      type: object
      properties:
        category_id:
          type: integer
        channel_id:
          type: integer
      title: ContextIdentifier
      x-internal: false
    SearchFilterOverrideScopeIdentifier:
      type: object
      properties:
        category_id:
          type: integer
        channel_id:
          type: integer
      title: ScopeIdentifier
      x-internal: false
    StoreProfile:
      description: 'The basic profile settings for a store, used to give the shopper information about the business from which they are purchasing.'
      type: object
      x-internal: false
      properties:
        store_address:
          type: string
        store_address_type:
          $ref: '#/components/schemas/AddressTypeEnumValues'
        store_email:
          type: string
        store_name:
          type: string
        store_phone:
          type: string
    StorefrontCategorySettings:
      type: object
      properties:
        category_tree_depth:
          type: integer
          maximum: 8
          minimum: 1
        default_product_sort:
          $ref: '#/components/schemas/ProductSortEnumValues'
        listing_mode:
          $ref: '#/components/schemas/CategoryListingModeEnumValues'
      x-tags:
        - Models
    StorefrontProductSettings:
      type: object
      properties:
        default_preorder_message:
          type: string
          example: preorder message
        show_add_to_cart_link:
          type: boolean
        show_add_to_cart_qty_box:
          type: boolean
        show_add_to_wishlist:
          type: boolean
        show_breadcrumbs_product_pages:
          type: string
          enum:
            - show_one
            - show_none
        show_product_brand:
          type: boolean
        show_product_price:
          type: boolean
        show_product_rating:
          type: boolean
        show_product_shipping:
          type: boolean
        show_product_sku:
          type: boolean
        show_product_weight:
          type: boolean
      title: StorefrontProductSettings
      x-tags:
        - Models
    StorefrontSearchSettings:
      type: object
      properties:
        content_product_sort:
          $ref: '#/components/schemas/ContentSortEnumValues'
        default_product_sort:
          $ref: '#/components/schemas/ProductSortEnumValues'
        product_filtering_enabled:
          description: Controls whether Product Filtering feature is active on the storefront. Only supports manipulation on a global level.
          type: boolean
        search_suggest:
          type: boolean
      x-internal: false
    StorefrontSecuritySettings:
      type: object
      properties:
        csp_header:
          type: object
          properties:
            enabled:
              type: boolean
            header_value:
              type: string
        hsts:
          type: object
          properties:
            enabled:
              type: boolean
            include_preload:
              type: boolean
            include_subdomains:
              type: boolean
            max_age:
              $ref: '#/components/schemas/HSTSMaxAgeEnumValues'
        sitewide_https_enabled:
          type: boolean
        x_frame_options_header:
          type: object
          properties:
            allowed_url:
              type: string
            enabled:
              type: boolean
            setting:
              type: string
              enum:
                - deny
                - same_origin
                - allow_from_url
      title: StorefrontSecuritySettings
      x-internal: false
    StorefrontStatus:
      type: object
      properties:
        down_for_maintenance_message:
          type: string
        prelaunch_message:
          type: string
        prelaunch_password:
          description: A read-only value representing the auto-generated storefront password.
          type: string
      title: ''
      x-internal: false
  responses:
    200-storefront-product-settings:
      description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested
      content:
        application/json:
          examples: {}
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/StorefrontProductSettings'
              meta:
                type: object
    422ErrorResp:
      description: |
        `422 Unprocessable Entity` Provided settings could not be applied for some reason - detailed errors in the response.
      content:
        application/json:
          examples: {}
          schema:
            description: ''
            type: object
            properties:
              errors:
                type: object
                properties:
                  '':
                    type: string
                    example: 'Incorrect value [current__only], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [besling], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'
                    minLength: 1
              status:
                type: number
                example: 422
              title:
                type: string
                example: JSON data is missing or invalid
                minLength: 1
              type:
                type: string
                example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                minLength: 1
            x-examples:
              example-1:
                errors:
                  '': 'Incorrect value [], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'
                status: 422
                title: JSON data is missing or invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
  securitySchemes:
    X-Auth-Token:
      description: |-
        Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` in the request header.

        ```http
        GET /stores/{{STORE_HASH}}/v3/settings/storefront/status
        host: api.bigcommerce.com
        Accept: application/json
        X-Auth-Token: {{ACCESS_TOKEN}}
        ```

        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |
      in: header
      name: X-Auth-Token
      type: apiKey
tags:
  - name: Email Statuses
  - name: Search Filters
  - name: Store Locale
  - name: Storefront Category
  - name: Storefront Robotstxt
  - name: Storefront Search
  - name: Storefront Security
  - name: Storefront SEO
  - name: Storefront Status
  - name: Web Analytics
  - name: Catalog
  - name: Inventory
  - name: Logo
  - name: Logo Image
  - name: Favicon Image
  - name: Store Profile
  - name: Storefront Product
security:
  - X-Auth-Token: []
