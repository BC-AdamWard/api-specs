openapi: 3.0.1
info:
  title: Abandoned Carts
  description: >-
    Use `/abandoned-carts/{token}` on headless storefronts to retrieve the
    `cart_id` via the abandoned cart `token` passed in to headless storefront
    via an abandoned cart email link clicked on by a shopper. Once the `cart_id`
    has been retrieved, it can be used to fetch and display information about
    the cart to the shopper via the storefront cart and/or server-to-server cart
    APIs.


    - [OAuth Scopes](#oauth-scopes)

    - [Authentication](#authentication)


    ## OAuth Scopes

    | UI Name                                      | Permission |
    Parameter                                     |

    |----------------------------------------------|------------|-----------------------------------------------|

    | Carts                                        | modify     |
    `store_cart`                                  |

    | Carts                                        | read-only  |
    `store_cart_read_only`                        |


    For more information on OAuth Scopes, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).


    ## Authentication


    Requests can be authenticated by sending an `access_token` via
    `X-Auth-Token` HTTP header:


    ```http

    GET /stores/{$$.env.store_hash}/v3/catalog/summary

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Token: {access_token}

    ```


    |Header|Parameter|Description|

    |-|-|-|

    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|


    For more information on Authenticating BigCommerce APIs, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  termsOfService: ''
  license:
    name: ''
  version: ''
servers:
  - url: https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3
security:
  - X-Auth-Token: []
tags:
  - name: Abandoned Carts
paths:
  /abandoned-carts/{token}:
    get:
      tags:
        - Abandoned Carts
      summary: Get an Abandoned Cart
      description: >-
        Returns the `cart_id` corresponding to the abandoned cart `{token}`
        passed in.


        **Usage Notes**:

        * `{token}` is the token in the query string of the abandoned cart link
        found in abandoned cart email notifications to shoppers
      operationId: getAbandonedCarts
      parameters:
        - name: token
          in: path
          description: >-
            Unique cart `UUID`.


            Unique cart `UUID` token that is generated for abandoned cart
            emails.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned on `GET` requests to `/abandoned_carts`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/abandonedCartInfo_Full'
                  meta:
                    $ref: '#/components/schemas/metaEmpty_Full'
        '400':
          description: |-
            Malformed request syntax. Typically need to fix the JSON
            Body to resend successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Full'
              example:
                status: 400
                title: Input is invalid.
                type: https://developer.bigcommerce.com/api#api-status-codes
        '404':
          description: >-
            If the requested account resource is not found for the franchise,
            return a 404 Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Full'
              example:
                status: 404
                title: Account with {id} not found
                type: https://developer.bigcommerce.com/api#api-status-codes
        '422':
          description: >-
            This occurs when missing or unacceptable data is passed for one or
            more fields. Please correct the values for the fields listed in the
            errors object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorDetailed_Full'
              example:
                status: 422
                title: JSON data is missing or invalid
                type: https://developer.bigcommerce.com/api#api-status-codes
                errors:
                  name: error.expected.jsstring
                  primary_contact.district: error.expected.jsstring.
        '502':
          description: >-
            If something happens during the request that causes it to fail, a
            502 response will be returned. A new request should be made;
            however, it could fail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Full'
              example:
                status: 502
                title: >-
                  A login URL could not be generated. Please try another
                  request.
                type: https://developer.bigcommerce.com/api#api-status-codes
        '503':
          description: >-
            If this occurs, you should retry the request. If you are unable to
            successfully make a request, please check the BigCommerce system
            status [here](https://status.bigcommerce.com/). A service is likely
            down and the request will need to be made again when it is back up
            (in several hours usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_Full'
              example:
                status: 503
                title: Service Unavailable
                type: https://developer.bigcommerce.com/api#api-status-codes
        '504':
          description: >-
            If this occurs, you should retry the request. Typically retrying the
            request several times will result in a successful request; However,
            if you are unable to successfully make a request, please check the
            BigCommerce system status [here](https://status.bigcommerce.com/). A
            service is likely down and the request will need to be made again
            when it is back up (in several hours usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorDetailed_Full'
              example:
                status: 504
                title: Gateway Timeout
                type: https://developer.bigcommerce.com/api#api-status-codes
                errors: {}
        default:
          description: ''
          content: {}
components:
  schemas:
    metaEmpty_Full:
      title: metaEmpty_Full
      type: object
    error_Full:
      title: error_Full
      type: object
      properties:
        status:
          type: integer
          description: |
            The HTTP status code.
        title:
          type: string
          description: |
            The error title describing the particular error.
        type:
          type: string
    errorDetailed_Full:
      title: errorDetailed_Full
      type: object
      properties:
        errors:
          title: DetailedErrors
          type: object
          additionalProperties:
            type: string
    abandonedCartInfo_Full:
      title: abandonedCartInfo_Full
      type: object
      properties:
        cart_id:
          type: string
          description: >-
            The `cart_id` of the abandoned cart. Can be used to display the
            abanded cart to the customer via storefront cart or
  responses:
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON
        Body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          example:
            status: 400
            title: Input is invalid.
            type: https://developer.bigcommerce.com/api#api-status-codes
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          example:
            status: 403
            title: >-
              Unauthorized Access. You do not have permission to make this
              request.
            type: https://developer.bigcommerce.com/api#api-status-codes
    404_NotFound:
      description: >-
        If the requested account resource is not found for the franchise, return
        a 404 Not Found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          example:
            status: 404
            title: Account with {id} not found
            type: https://developer.bigcommerce.com/api#api-status-codes
    422_UnprocessableEntity:
      description: >-
        This occurs when missing or unacceptable data is passed for one or more
        fields. Please correct the values for the fields listed in the errors
        object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          example:
            status: 422
            title: JSON data is missing or invalid
            type: https://developer.bigcommerce.com/api#api-status-codes
            errors:
              name: error.expected.jsstring
              primary_contact.district: error.expected.jsstring.
    502_GatewayError:
      description: >-
        If something happens during the request that causes it to fail, a 502
        response will be returned. A new request should be made; however, it
        could fail.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          example:
            status: 502
            title: A login URL could not be generated. Please try another request.
            type: https://developer.bigcommerce.com/api#api-status-codes
    503_ServiceUnavailable:
      description: >-
        If this occurs, you should retry the request. If you are unable to
        successfully make a request, please check the BigCommerce system status
        [here](https://status.bigcommerce.com/). A service is likely down and
        the request will need to be made again when it is back up (in several
        hours usually)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          example:
            status: 503
            title: Service Unavailable
            type: https://developer.bigcommerce.com/api#api-status-codes
    504_GatewayTimeout:
      description: >-
        If this occurs, you should retry the request. Typically retrying the
        request several times will result in a successful request; However, if
        you are unable to successfully make a request, please check the
        BigCommerce system status [here](https://status.bigcommerce.com/). A
        service is likely down and the request will need to be made again when
        it is back up (in several hours usually)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          example:
            status: 504
            title: Gateway Timeout
            type: https://developer.bigcommerce.com/api#api-status-codes
            errors: {}
    abandonedCart_Resp:
      description: Returned on `GET` requests to `/abandoned_carts`.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/abandonedCartInfo_Full'
              meta:
                $ref: '#/components/schemas/metaEmpty_Full'
  parameters:
    Accept:
      name: Accept
      in: header
      description: Accept
      required: true
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      description: Content-Type
      required: true
      schema:
        type: string
        default: application/json
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      description: >-
        ### OAuth Scopes

        |  **UI Name** | **Permission** | **Parameter** |

        | --- | --- | --- |

        |  Carts | modify | `store_cart` |

        |  Carts | read-only | `store_cart_read_only` |


        ### Headers


        |Header|Parameter|Description|

        |-|-|-|

        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
        installing an app in a BigCommerce control panel.|


        ### Example


        ```http

        GET /stores/{$$.env.store_hash}/v3/catalog/summary

        host: api.bigcommerce.com

        Content-Type: application/json

        X-Auth-Token: {access_token}

        ```


        * For more information on Authenticating BigCommerce APIs, see:
        [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
      name: X-Auth-Token
      in: header
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
