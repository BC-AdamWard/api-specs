openapi: 3.0.0
info:
  title: Webhooks v3
  version: ''
  description: 'Get notified when specific events occur on a BigCommerce store. For more information, see [Webhooks Overview](https://developer.bigcommerce.com/api-docs/store-management/webhooks/overview).'
paths:
  /hooks:
    post:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Create a Webhook
      description: Creates a webhook. Only one webhook at a time can be created. Custom headers can be added. Destination URL must be served on port 443 (custom ports are not currently supported).
      operationId: createWebhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
            examples:
              Example:
                value:
                  scope: '{$$.env.scope}'
                  destination: '{$$.env.destination}'
                  is_active: true
        x-examples:
          application/json:
            scope: store/order/*
            destination: 'https://665b65a6.ngrok.io/webhooks'
            headers: {}
      tags:
        - Webhooks
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhooks_Resp'
      summary: Get Webhooks
      description: |-
        Returns a list of all webhooks on a store associated to the `client_id` used to authenticate the request.

        *Note: BigCommerce determines the `client_id` from the `access_token`.*
      operationId: getAllWebhooks
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
  '/hooks/{id}':
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      description: Return a webhook by ID.
      operationId: getWebhook
      summary: Get a Webhook
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Update a Webhook
      description: Updates a webhook. Custom headers can be added.
      operationId: updateAWebhook
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
        x-examples:
          application/json:
            scope: store/cart/lineItem/*
            destination: 'https://myapp.herokuapp.com/'
            is_active: true
            headers:
              User-Name: Hello
              Password: Goodbye
      tags:
        - Webhooks
    delete:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Delete a Webhook
      description: 'Deletes a webhook. Only one webhook at a time can be deleted. When a webhook is deleted, it is returned in the response as a 200 OK.'
      operationId: deleteAWebhook
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
tags:
  - name: Webhooks
  - name: Callbacks
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: true
servers:
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3'
    variables:
      $$.env.store_hash:
        default: '{$$.env.store_hash}'
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2'
    variables:
      $$.env.store_hash:
        default: '{$$.env.store_hash}'
components:
  parameters:
    Accept:
      in: header
      name: Accept
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
  responses:
    webhooks_Resp:
      description: ''
      content:
        v3:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/webhook_Full'
              meta:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
          examples:
            v3:
              value:
                data:
                  - id: 18048287
                    client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                    store_hash: sftg45fsd
                    created_at: 1561488106
                    updated_at: 1561488106
                    scope: '`store/order/*`'
                    destination: 'https://665b65a6.ngrok.io/webhooks`'
                    is_active: true
                    headers:
                      custom: string
                meta:
                  pagination:
                    offset: 0
                    limit: 0
                    total_items: 0
        v2:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/webhook_Full'
          examples:
            v2:
              value:
                - id: 18048287
                  client_id: m9r6keqmo7h7f23btnp3anbez1kglkl
                  store_hash: anbez1k
                  scope: store/order/*
                  destination: 'https://665b65a6.ngrok.io/webhooks'
                  headers: {}
                  is_active: true
                  created_at: 1561488106
                  updated_at: 1561488106
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
                errors: {}
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON
        Body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    404_NotFound:
      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Account with {id} not found'
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string
              errors:
                type: object
                properties:
                  name:
                    type: string
                  primary_contact.district:
                    type: string
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                errors:
                  destination: error.path.missing.
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    webhook_Resp:
      description: Example response
      content:
        v3:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/webhook_Full'
              meta:
                type: object
          examples:
            v3:
              value:
                data:
                  id: 18048287
                  client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                  store_hash: sftg45fsd
                  created_at: 1561488106
                  updated_at: 1561488106
                  scope: '`store/order/*`'
                  destination: 'https://665b65a6.ngrok.io/webhooks`'
                  is_active: true
                  headers:
                    custom: string
                meta: {}
        v2:
          schema:
            $ref: '#/components/schemas/webhook_Full'
          examples:
            v2:
              value:
                id: 18048287
                client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                store_hash: sftg45fsd
                created_at: 1561488106
                updated_at: 1561488106
                scope: '`store/order/*`'
                destination: 'https://665b65a6.ngrok.io/webhooks`'
                is_active: true
                headers:
                  custom: string
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  - | - | - |

        **Note**: Creating and mangaing webhooks require the default scope used when an API User account is created.

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{$$.env.store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  schemas:
    store_cart_*:
      description: "Subscribes to the following events:\n- `store/cart/created`\n- `store/cart/updated`\n- `store/cart/deleted`\n- `store/cart/couponApplied`\n- `store/cart/abandoned`\n- `store/cart/converted`\n- `store/cart/lineItem`\n\t\t\t\nSee individual events for more information.\n"
      title: store/cart/*
      x-examples: {}
    store_cart_created:
      description: |-
        This webhook fires on new cart creation when any of the following occur:
        - a storefront shopper adding their first product to a cart during a new session
        - a successful `POST` request to `/carts` using either the [storefront](https://developer.bigcommerce.com/api-reference/storefront/carts/cart/createacart) or [server-to-server](https://developer.bigcommerce.com/api-reference/store-management/carts/cart/createacart) API 

        Cart creation also fires the `store/cart/updated` webhook.

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### Callback schema:
      x-examples: {}
      title: store/cart/created
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  example: cart
                  enum:
                    - cart
                    - cart_line_item
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
      x-tags:
        - created
      type: object
    store_cart_updated:
      title: store/cart/updated
      description: |-
        This webhook is fired whenever a cart is modified through the changes in its line items. Eg. when a new item is added to a cart or an existing item’s quantity is updated. This hook also fires when the email is changed during guest checkout or when an existing item is deleted. The payload will include the ID of the cart being updated. <br><br>This webhook also fires along with the cart created hook, because the first product being added to an empty cart triggers an update. It will also fire for the following events: <ul><li>Logging into customer account after creating a cart (email is inherited from customer account email)</li><li>Entering email address via guest checkout</li><li>Changing the email in guest checkout</li></ul><br>Fields that trigger event:<ul><li>Quantity</li><li>Item Price</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_deleted:
      title: store/cart/deleted
      description: |-
        This webhook will fire whenever a cart is deleted. This will occur either when all items have been removed from a cart and it is auto-deleted, or when the cart is explicitly removed via a `DELETE` request by an API consumer. This ends the lifecycle of the cart. The  `store/cart/updated`  webhook will also fire when the last item is removed.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - deleted
      type: object
    store_cart_couponApplied:
      title: store/cart/couponApplied
      description: |-
        This webhook will fire whenever a new coupon code is applied to a cart. It will include the ID of the coupon code.

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/couponApplied",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "couponId": 1
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
                couponId:
                  type: string
                  description: ID of the coupon
      x-tags:
        - created
      type: object
    store_cart_abandoned:
      title: store/cart/abandoned
      description: |-
        This webhook will fire once after a cart is abandoned. A cart is considered abandoned if no changes have been made for at least one hour after the last modified property. This hook is available for all store plans, regardless of whether the Abandoned Cart Saver feature is enabled.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/abandoned",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      type: object
    store_cart_converted:
      title: store/cart/converted
      description: |-
        This hook fires when a cart is converted into an order, which is typically after the payment step of checkout on the storefront. At this point, the cart is no longer accessible and has been deleted. This hook returns both the cart ID and order ID for correlation purposes.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/converted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "orderId": 252
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `cart`
                  default: cart
                id:
                  type: string
                  description: ID of the cart
                  example: 09346904-4175-44fd-be53-f7e598531b6c
                orderId:
                  type: string
                  description: ID of the order created
                  example: '252'
      x-tags:
        - created
      type: object
    store_cart_lineItem_*:
      title: store/cart/lineItem/*
      description: |-
        Subscribe to all cart line item events. This webhook will fire when a change occurs to line items in the cart. This can be when items are added to a cart, removed or updated.(Ex. change to quantity, product options or price).

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
                cartId:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_created:
      title: store/cart/lineItem/created
      description: |-
        When a new item is added to the cart

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/lineItem/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"            
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
                cartId:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_updated:
      title: store/cart/lineItem/updated
      description: |-
        When an item’s quantity has changed or the product options change.<br><br>Fields that trigger event:<ul><li>Quantity</li><li>Item Price</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/lineItem/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"            
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
                cartId:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_deleted:
      title: store/cart/lineItem/deleted
      description: |-
        When an item is deleted from the cart

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/lineItem/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c",
            "cartId": "b0386708-fef3-45de-9d8b-fbe3031450a4"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
                cartId:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_category_*:
      title: store/category/*
      description: |-
        Subscribe to all store/category events

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": "42"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"category"`
                  default: '"category"'
                id:
                  type: string
                  description: ID of the category
                  example: '42'
      x-tags:
        - created
      type: object
    store_category_created:
      title: store/category/created
      description: |-
        Category is created   

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": "42"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"category"`
                  default: '"category"'
                id:
                  type: string
                  description: ID of the category
                  example: '42'
      x-tags:
        - created
      type: object
    store_category_updated:
      title: store/category/updated
      description: |-
        Category is updated <br><br>Fields that trigger event:<ul><li>Url</li><li>Name</li><li>Redirect old URLs</li><li>Description</li><li>Parent Category</li><li>Template Layout File</li><li>Sort Order</li><li>Default Product Sort</li><li>Category Image</li><li>Page Title</li><li>Meta Keywords</li><li>Meta Description</li><li>Search Keywords</li><li>Google Product Category</li><li>Enable Google Shopping</li></ul>

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": "42"
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"category"`
                  default: '"category"'
                id:
                  type: string
                  description: ID of the category
                  example: '42'
      type: object
      x-tags:
        - updated
    store_category_deleted:
      title: store/category/deleted
      description: |-
        Category is deleted

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/category/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "category",
            "id": "42"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"category"`
                  default: '"category"'
                id:
                  type: string
                  description: ID of the category
                  example: '42'
      type: object
      x-tags:
        - deleted
    store_channel_*:
      title: store/channel/*
      description: |-
        Subscribe to all `store/channel` events. 

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/channel/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "channel",
            "id": "173331"
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"channel"`
                  default: '"channel"'
                  example: '"channel"'
                  readOnly: true
                id:
                  type: string
                  description: ID of the channel
      x-tags:
        - created
      type: object
    store_channel_created:
      title: store/channel/created
      description: |-
        Fires when a channel is created via control panel or API

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/channel/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "channel",
            "id": "173331"
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"channel"`
                  default: '"channel"'
                  example: '"channel"'
                  readOnly: true
                id:
                  type: string
                  description: ID of the channel
      x-tags:
        - created
      type: object
    store_channel_updated:
      title: store/channel/updated
      description: |-
        Fires when a channel is updated via control panel or API. 

        Fields that trigger event:<ul><li>name</li><li>external_id</li><li>status</li><li>is_listable_from_ui</li><li>is_visible</li><li>is_enabled (to be deprecated)</li><li>config_meta</li></ul>

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/channel/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "channel",
            "id": "173331"
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"channel"`
                  default: '"channel"'
                  example: '"channel"'
                  readOnly: true
                id:
                  type: string
                  description: ID of the channel
      x-tags:
        - created
      type: object
    store_customer_*:
      title: store/customer/*
      description: |-
        Subscribe to all store/customer events

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_created:
      title: store/customer/created
      description: |-
        A new customer is created

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": "32"
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  default: '"customer"'
                  example: '"customer"'
                  readOnly: true
                id:
                  type: string
                  description: ID of the customer
                  example: '32'
      x-tags:
        - created
      type: object
    store_customer_updated:
      title: store/customer/updated
      description: |-
        Customer is updated. Does not currently track changes to the customer address.

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  default: '"customer"'
                  example: '"customer"'
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer
                  example: '32'
      x-tags:
        - created
      type: object
    store_customer_deleted:
      title: store/customer/deleted
      description: |-
        Customer is deleted

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  default: '"customer"'
                  example: '"customer"'
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer
                  example: '32'
      x-tags:
        - created
      type: object
    store_customer_address_created:
      title: store/customer/address/created
      description: |-
        Customer address is created

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/address/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 60,
            "address": {
              "customer_id": 32
            }
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"customer"`
                id:
                  type: integer
                  description: ID of the customer address
                  example: 60
                address:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                      description: ID of the customer
                      example: 32
      x-tags:
        - created
      type: object
    store_customer_address_updated:
      title: store/customer/address/updated
      description: |-
        Customer address is updated

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/address/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 60,
            "address": {
              "customer_id": 32
            }
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"customer"`
                id:
                  type: integer
                  description: ID of the customer address
                  example: 60
                address:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                      description: ID of the customer
                      example: 32
      x-tags:
        - created
      type: object
    store_customer_address_deleted:
      title: store/customer/address/deleted
      description: |-
        Customer address is deleted

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/address/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 60,
            "address": {
              "customer_id": 32
            }
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"customer"`
                id:
                  type: integer
                  description: ID of the customer address
                  example: 60
                address:
                  type: object
                  properties:
                    customer_id:
                      type: integer
                      description: ID of the customer
                      example: 32
      x-tags:
        - created
      type: object
    store_customer_payment_instrument_default_updated:
      title: store/customer/payment/instrument/default/updated
      description: |-
        Customer default payment instrument is updated

        ### Example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/customer/payment/instrument/default/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "customer",
            "id": 32
          }
        }
        ```

        ### Callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                  default: '"customer"'
                  example: '"customer"'
                  readOnly: true
                id:
                  type: integer
                  description: ID of the customer
                  example: '32'
      x-tags:
        - created
      type: object
    store_order_*:
      title: store/order/*
      description: Subscribe to all store/order events
      type: object
    store_order_created:
      title: store/order/created
      description: |-
        Fires if an order is created using the control panel, an app or via the API.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"order"`
                  default: '"order"'
                  example: '"order"'
                id:
                  type: integer
                  description: ID of the order
                  example: 250
      x-tags:
        - created
      type: object
    store_order_updated:
      title: store/order/updated
      description: |-
        Fires when an already created order is updated. Any changes to an existing order will fire this webhook.Updates can include changing the status, updating a coupon or changing an address. 

        Fields that trigger event: <ul><li>Product Type</li><li>Search Keywords</li><li>Related Products</li><li>Warranty Information</li><li>Page Title</li><li>Meta Description</li><li>Gift Wrapping options</li><li>Bin Picking Number (BPN)</li><li>Fixed Shipping Price</li><li>Free Shipping</li><li>Open Graph Sharing Type</li><li>Availability Text</li><li>Purchasability</li><li>Release Date</li><li>Remove pre-order status on this date</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"order"`
                  default: '"order"'
                  example: '"order"'
                id:
                  type: integer
                  description: ID of the order
                  example: 250
      x-tags:
        - created
      type: object
    store_order_archived:
      title: store/order/archived
      description: |-
        Order is archived

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/archived",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"order"`
                  default: '"order"'
                  example: '"order"'
                id:
                  type: integer
                  description: ID of the order
                  example: 250
      x-tags:
        - created
      type: object
    store_order_statusUpdated:
      title: store/order/statusUpdated
      description: |-
        This will only fire if the order status has changed, such as `Pending` to `Awaiting Payment`

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/statusUpdated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250,
            "status": {
              "previous_status_id": 1,
              "new_status_id": 11
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"order"`
                id:
                  type: integer
                  description: ID of the order
                status:
                  type: object
                  properties:
                    previous_status_id:
                      type: integer
                      description: Previous status ID
                      example: 1
                    new_status_id:
                      type: integer
                      description: Updated status ID
                      example: 11
      x-tags:
        - created
      type: object
    store_order_message_created:
      title: store/order/message/created
      description: |-
        Order message is created by customer or in control panel

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/message/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
         "data": {
            "type": "order",
            "id": 250,
            "message": {
              "order_message_id": 3
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"order"`
                id:
                  type: string
                  description: ID of the order
                message:
                  type: object
                  properties:
                    order_message_id:
                      type: integer
                      description: ID of the message on the order
      x-tags:
        - created
      type: object
    store_order_refund_created:
      title: store/order/refund/created
      description: |-
        A refund has been submitted against an order

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/order/refund/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "order",
            "id": 250,
            "refund": {
              "refund_id": 3
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"order"`
                id:
                  type: string
                  description: ID of the order
                refund:
                  type: object
                  properties:
                    refund_id:
                      type: integer
                      description: ID of the refund submitted against the order
      x-tags:
        - created
      type: object
    store_product_*:
      title: store/product/*
      description: Subscribe to all store/product events
      type: object
    store_product_deleted:
      title: store/product/deleted
      description: |-
        Product is deleted

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 205
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"product"`
                  default: '"product"'
                  example: '"product"'
                id:
                  type: integer
                  description: ID of the product
                  example: 205
      x-tags:
        - created
      type: object
    store_product_created:
      title: store/product/created
      description: |-
        A new product is created

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 205
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"product"`
                  default: '"product"'
                  example: '"product"'
                id:
                  type: integer
                  description: ID of the product
                  example: 205
      x-tags:
        - created
      type: object
    store_product_updated:
      title: store/product/updated
      description: |-
        Occurs when product details are edited. 

        Fields that trigger event<ul><li>Product Type</li><li>Search Keywords</li><li>Related Products</li><li>Warranty Information</li><li>Page Title</li><li>Meta Description</li><li>Gift Wrapping options</li><li>Bin Picking Number (BPN)</li><li>Fixed Shipping Price</li><li>Free Shipping</li><li>Open Graph Sharing Type</li><li>Availability Text</li><li>Purchasability</li><li>Release Date</li><li>Remove pre-order status on this date</li><li>Preorder Message</li><li>Inventory Stock</li><li>Inventory Low Stock</li><li>Track inventory</li><li>Product UPC/EAN</li><li>SKU</li><li>Cost</li><li>Tax Class</li><li>Weight</li><li>Width</li><li>Height</li><li>Depth</li><li>Condition</li><li>Show condition on storefront</li><li>Brand</li><li>Default Price</li><li>Sale Price</li><li>MSRP</li><li>Product Name</li><li>Description</li><li>Visible on Storefront</li><li>Sort Order</li><li>Categories</li><li>Product URL</li><li>Set as a Featured Product on my Storefront</li></ul>

        Fields that do not trigger event<ul><li>Manufacturer Part Number (MPN)</li><li>Global Trade Number (GTN)</li><li>Tax Provider Tax Code</li><li>Product Image</li><li>Product Image Description</li><li>Product Files</li><li>Customs Information</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 205
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"product"`
                  default: '"product"'
                  example: '"product"'
                id:
                  type: integer
                  description: ID of the product
                  example: 205
      x-tags:
        - created
      type: object
    store_product_inventory_updated:
      title: store/product/inventory/updated
      description: |-
        Product inventory is updated. <br><br>Fields that trigger event: <ul><li>Inventory Stock</li></ul>Fields that do not trigger event: <ul><li>Track Inventory</li><li>Inventory Low Stock</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/inventory/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 167,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"product"`
                id:
                  type: integer
                  description: ID of the product
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                    method:
                      type: string
                      enum:
                        - '"absolute"'
                        - '"relative"'
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        - `absolute` - inventory updated by an order
                        - `relative` - inventory updated using the API or the control panel
                    value:
                      type: integer
                      description: 'the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'
      x-tags:
        - created
      type: object
    store_product_inventory_order_updated:
      title: store/product/inventory/order/updated
      description: |-
        Fires if a product’s inventory is decremented or incremented, including when an order is placed. Webhook responds to inventory updates made using the control panel, CSV import, API or an app.<br><br>Fields that trigger event: <ul><li>Quantity</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/product/inventory/order/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "product",
            "id": 167,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `"product"`
                id:
                  type: integer
                  description: ID of the product
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                    method:
                      type: string
                      enum:
                        - '"absolute"'
                        - '"relative"'
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        - `absolute` - inventory updated by an order
                        - `relative` - inventory updated using the API or the control panel
                    value:
                      type: integer
                      description: 'the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'
      x-tags:
        - created
      type: object
    store_shipment_*:
      title: store/shipment/*
      description: Subscribe to all store/shipment events
      type: object
    store_shipment_created:
      title: store/shipment/created
      description: |-
        Shipment is created

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/shipment/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "shipment",
            "id": 12,
            "orderId": 251
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"shipment"`
                id:
                  type: integer
                  description: ID of the shipment
                orderId:
                  type: integer
                  description: ID of the order
      x-tags:
        - created
      type: object
    store_shipment_updated:
      title: store/shipment/updated
      description: |-
        Shipment is updated

        Fields that trigger event:<ul><li>Shipping Tracking Number</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/shipment/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "shipment",
            "id": 12,
            "orderId": 251
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"shipment"`
                id:
                  type: integer
                  description: ID of the shipment
                orderId:
                  type: integer
                  description: ID of the order
      x-tags:
        - created
      type: object
    store_shipment_deleted:
      title: store/shipment/deleted
      description: |-
        Shipment is deleted

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/shipment/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "shipment",
            "id": 12,
            "orderId": 251
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"shipment"`
                id:
                  type: integer
                  description: ID of the shipment
                orderId:
                  type: integer
                  description: ID of the order
      x-tags:
        - created
      type: object
    store_sku_*:
      title: store/sku/*
      description: Subscribe to all store/sku events
      type: object
    store_sku_created:
      title: store/sku/created
      description: |-
        A new SKU is created

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "sku": {
              "product_id": 206,
              "variant_id": 509
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"sku"`
                id:
                  type: integer
                  description: ID of the SKU
                sku:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                    variant_id:
                      type: integer
                      description: ID of the variant
      x-tags:
        - created
      type: object
    store_sku_updated:
      title: store/sku/updated
      description: |-
        SKU is updated

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "sku": {
              "product_id": 206,
              "variant_id": 509
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"sku"`
                id:
                  type: integer
                  description: ID of the SKU
                sku:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                    variant_id:
                      type: integer
                      description: ID of the variant
      x-tags:
        - created
      type: object
    store_sku_deleted:
      title: store/sku/deleted
      description: |-
        SKU is deleted

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "sku": {
              "product_id": 206,
              "variant_id": 509
            }
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `"sku"`
                id:
                  type: integer
                  description: ID of the SKU
                sku:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                    variant_id:
                      type: integer
                      description: ID of the variant
      x-tags:
        - created
      type: object
    store_sku_inventory_updated:
      title: store/sku/inventory/updated
      description: |-
        SKU is updated

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/inventory/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2,
              "variant_id": 509
            }
          }
        }
        ```

        ### callback schema:
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `sku`
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU
                  example: 461
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                      example: 167
                    method:
                      type: string
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        - `absolute` - inventory updated by an order
                        - `relative` - inventory updated using the API or the control panel
                      enum:
                        - absolute
                        - relative
                    value:
                      type: integer
                      description: 'the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'
                      example: 2
                    variant_id:
                      type: integer
                      description: ID of the variant
                      example: 509
      x-tags:
        - created
      type: object
    store_sku_inventory_order_updated:
      title: store/sku/inventory/order/updated
      description: |-
        This will fire when the inventory is updated via API, the control panel, when an order is placed and when an order is refunded and the inventory is returned to stock. This hook will fire based on a store's Inventory settings. <br><br>Fields that trigger event:<ul><li>Quantity</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/sku/inventory/order/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "sku",
            "id": 461,
            "inventory": {
              "product_id": 167,
              "method": "absolute",
              "value": 2,
              "variant_id": 509
            }
          }
        }
        ```

        ### callback schema:
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `sku`
                  example: sku
                id:
                  type: integer
                  description: ID of the SKU
                  example: 461
                inventory:
                  type: object
                  properties:
                    product_id:
                      type: integer
                      description: ID of the product
                      example: 167
                    method:
                      type: string
                      description: |-
                        How the inventory was adjusted. Value will be one of the following:
                        - `absolute` - inventory updated by an order
                        - `relative` - inventory updated using the API or the control panel
                      enum:
                        - absolute
                        - relative
                    value:
                      type: integer
                      description: 'the number of items that the inventory changed by. This can be negative if the inventory is decreased `-3` or positive if an item is returned to the inventory from an order, `2`'
                      example: 2
                    variant_id:
                      type: integer
                      description: ID of the variant
                      example: 509
      x-tags:
        - created
      type: object
    store_app_uninstalled:
      title: store/app/uninstalled
      description: |-
        Occurs when a client store is cancelled and uninstalled from the platform

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/app/uninstalled",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "store"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: will always be `store`
      x-tags:
        - created
      type: object
    store_information_updated:
      title: store/information/updated
      description: |-
        Occurs when changes are made to store settings. 

        Fields that trigger event
        <ul><li>Store Name</li><li>Store Address</li><li>Store Country</li><li>Address Type</li><li>Email</li><li>Phone</li></ul>

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/information/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "store"
          }
        }
        ```

        ### callback schema:
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: ''
                  example: store
      x-tags:
        - created
      type: object
    store_subscriber_*:
      title: store/subscriber/*
      description: Subscribe to all `store/subscriber` events
      type: object
    store_subscriber_created:
      title: store/subscriber/created
      description: |-
        Subscriber is created 

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/subscriber/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "subscriber",
            "id": 5
          }
        }
        ```

        ### callback schema:
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `subscriber`
                  example: subscriber
                id:
                  type: integer
                  description: ID of the subscriber
                  example: 5
      x-tags:
        - created
      type: object
    store_subscriber_updated:
      title: store/subscriber/updated
      description: |-
        Subscriber is updated 

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/subscriber/updated",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "subscriber",
            "id": 5
          }
        }
        ```

        ### callback schema:
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `subscriber`
                  example: subscriber
                id:
                  type: integer
                  description: ID of the subscriber
                  example: 5
      x-tags:
        - created
      type: object
    store_subscriber_deleted:
      title: store/subscriber/deleted
      description: |-
        Subscriber is deleted

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/subscriber/deleted",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "subscriber",
            "id": 5
          }
        }
        ```

        ### callback schema:
      x-examples: {}
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: Will always be `subscriber`
                  example: subscriber
                id:
                  type: integer
                  description: ID of the subscriber
                  example: 5
      x-tags:
        - created
      type: object
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: true
    errorDetailed_Full:
      type: object
      title: errorDetailed_Full
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
          title: DetailedErrors
      x-internal: true
    webhook_Base:
      type: object
      title: webhook_Base
      properties:
        scope:
          type: string
          example: '`store/order/*`'
          description: Event you subscribe to
        destination:
          type: string
          example: 'https://665b65a6.ngrok.io/webhooks`'
          description: 'URL must be active, return a 200 response, and be served on port 443 (custom ports not currently supported).'
        is_active:
          type: boolean
          example: true
          description: If webhook is active or not
        headers:
          type: object
          description: 'You can pass in any number of custom headers to validate webhooks being returned. '
          properties:
            custom:
              type: string
      required:
        - scope
        - destination
        - is_active
        - headers
      x-internal: true
    webhook_Full:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Id of the webhook
              example: 18048287
            client_id:
              type: string
              description: 'Client ID, unique to the store'
              example: m9r6keqmo7h7f23btnpwernbez1kglkl
            store_hash:
              type: string
              description: 'Store permanent ID. '
              example: sftg45fsd
            created_at:
              type: integer
              example: 1561488106
              description: Created time
            updated_at:
              type: integer
              example: 1561488106
              description: Updated time
        - $ref: '#/components/schemas/webhook_Base'
      title: webhook_Full
      x-internal: true
    Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        offset:
          type: integer
          description: Offset.
        limit:
          type: integer
          description: Total number of items in the result set.
        total_items:
          type: integer
          description: Total number of items.
      x-internal: true
    webhook_callback_base:
      description: ''
      x-examples:
        example-1:
          created_at: 1561482670
          store_id: '1025646'
          producer: 'stores/{store_hash}'
          scope: store/cart/created
          hash: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
      title: ''
      allOf:
        - properties:
            created_at:
              type: integer
              example: 1561482670
              description: Hook creation date as a Unix timestamp.
              readOnly: true
            store_id:
              type: string
              minLength: 1
              example: '1025646'
              description: A numerical identifier that is unique to each store.
            producer:
              type: string
              minLength: 1
              example: 'stores/{store_hash}'
              description: Will always follow the pattern `stores/store_hash`. This is the store that created the webhook.
            scope:
              type: string
              minLength: 1
              example: store/cart/created
              description: 'The [event](/api-docs/getting-started/webhooks/webhook-events) registered when the webhook was created.'
            hash:
              type: string
              minLength: 1
              example: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
              description: The payload data JSON encoded then passed through SH1 encryption.
      type: object
  examples:
    store-cart-created:
      value:
        description: Example shared example
