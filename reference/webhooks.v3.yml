openapi: 3.0.0
info:
  title: Webhooks v3
  version: ''
  description: 'Get notified when specific events occur on a BigCommerce store. For more information, see [Webhooks Overview](https://developer.bigcommerce.com/api-docs/store-management/webhooks/overview).'
paths:
  /hooks:
    post:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
        '422':
          $ref: '#/components/responses/422_UnprocessableEntity'
      summary: Create a Webhook
      description: Creates a webhook. Only one webhook at a time can be created. Custom headers can be added. Destination URL must be served on port 443 (custom ports are not currently supported).
      operationId: createWebhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
            examples:
              Example:
                value:
                  scope: '{$$.env.scope}'
                  destination: '{$$.env.destination}'
                  is_active: true
        x-examples:
          application/json:
            scope: store/order/*
            destination: 'https://665b65a6.ngrok.io/webhooks'
            headers: {}
      tags:
        - Webhooks
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhooks_Resp'
      summary: Get Webhooks
      description: |-
        Returns a list of all webhooks on a store associated to the `client_id` used to authenticate the request.

        *Note: BigCommerce determines the `client_id` from the `access_token`.*
      operationId: getAllWebhooks
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
  '/hooks/{id}':
    get:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      description: Return a webhook by ID.
      operationId: getWebhook
      summary: Get a Webhook
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Update a Webhook
      description: Updates a webhook. Custom headers can be added.
      operationId: updateAWebhook
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_Base'
        x-examples:
          application/json:
            scope: store/cart/lineItem/*
            destination: 'https://myapp.herokuapp.com/'
            is_active: true
            headers:
              User-Name: Hello
              Password: Goodbye
      tags:
        - Webhooks
    delete:
      responses:
        '200':
          $ref: '#/components/responses/webhook_Resp'
      summary: Delete a Webhook
      description: 'Deletes a webhook. Only one webhook at a time can be deleted. When a webhook is deleted, it is returned in the response as a 200 OK.'
      operationId: deleteAWebhook
      tags:
        - Webhooks
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
tags:
  - name: Webhooks
  - name: Callbacks
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: true
servers:
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3'
    variables:
      $$.env.store_hash:
        default: '{$$.env.store_hash}'
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2'
    variables:
      $$.env.store_hash:
        default: '{$$.env.store_hash}'
components:
  parameters:
    Accept:
      in: header
      name: Accept
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
  responses:
    webhooks_Resp:
      description: ''
      content:
        v3:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/webhook_Full'
              meta:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
          examples:
            v3:
              value:
                data:
                  - id: 18048287
                    client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                    store_hash: sftg45fsd
                    created_at: 1561488106
                    updated_at: 1561488106
                    scope: '`store/order/*`'
                    destination: 'https://665b65a6.ngrok.io/webhooks`'
                    is_active: true
                    headers:
                      custom: string
                meta:
                  pagination:
                    offset: 0
                    limit: 0
                    total_items: 0
        v2:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/webhook_Full'
          examples:
            v2:
              value: 
                [
                  {
                    "id": 18048287,
                    "client_id": "m9r6keqmo7h7f23btnp3anbez1kglkl",
                    "store_hash": "anbez1k",
                    "scope": "store/order/*",
                    "destination": "https://665b65a6.ngrok.io/webhooks",
                    "headers": {},
                    "is_active": true,
                    "created_at": 1561488106,
                    "updated_at": 1561488106
                  }
                ]
    502_GatewayError:
      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 502
                title: A login URL could not be generated. Please try another request.
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    504_GatewayTimeout:
      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDetailed_Full'
          examples:
            response:
              value:
                status: 504
                title: Gateway Timeout
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
                errors: {}
    403_Unauthorized:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 403
                title: Unauthorized Access. You do not have permission to make this request.
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    400_BadRequest:
      description: |-
        Malformed request syntax. Typically need to fix the JSON
        Body to resend successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 400
                title: Input is invalid.
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    404_NotFound:
      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 404
                title: 'Account with {id} not found'
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    422_UnprocessableEntity:
      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string
              errors:
                type: object
                properties:
                  name:
                    type: string
                  primary_contact.district:
                    type: string
          examples:
            response:
              value:
                status: 422
                title: JSON data is missing or invalid
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                errors:
                  destination: error.path.missing.
    503_ServiceUnavailable:
      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_Full'
          examples:
            response:
              value:
                status: 503
                title: Service Unavailable
                type: 'https://developer.bigcommerce.com/api#api-status-codes'
    webhook_Resp:
      description: Example response
      content:
        v3:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/webhook_Full'
              meta:
                type: object
          examples:
            v3:
              value:
                data:
                  id: 18048287
                  client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                  store_hash: sftg45fsd
                  created_at: 1561488106
                  updated_at: 1561488106
                  scope: '`store/order/*`'
                  destination: 'https://665b65a6.ngrok.io/webhooks`'
                  is_active: true
                  headers:
                    custom: string
                meta: {}
        v2:
          schema:
            $ref: '#/components/schemas/webhook_Full'
          examples:
            v2:
              value:
                id: 18048287
                client_id: m9r6keqmo7h7f23btnpwernbez1kglkl
                store_hash: sftg45fsd
                created_at: 1561488106
                updated_at: 1561488106
                scope: '`store/order/*`'
                destination: 'https://665b65a6.ngrok.io/webhooks`'
                is_active: true
                headers:
                  custom: string
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  - | - | - |

        **Note**: Creating and mangaing webhooks require the default scope used when an API User account is created.

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{$$.env.store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  schemas:
    store_cart_*:
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      title: store/cart/created
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_created:
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      title: store/cart/created
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_updated:
      title: store/cart/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_deleted:
      title: store/cart/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_couponApplied:
      title: store/cart/couponApplied
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_abandoned:
      title: store/cart/abandoned
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_converted:
      title: store/cart/converted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_*:
      title: store/cart/lineItem/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_created:
      title: store/cart/lineItem/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_updated:
      title: store/cart/lineItem/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_cart_lineItem_deleted:
      title: store/cart/lineItem/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_category_*:
      title: store/category/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_category_created:
      title: store/category/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_category_updated:
      title: store/category/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_category_deleted:
      title: store/category/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_channel_*:
      title: store/channel/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_channel_created:
      title: store/channel/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_channel_updated:
      title: store/channel/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_*:
      title: store/customer/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_created:
      title: store/customer/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_updated:
      title: store/customer/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_deleted:
      title: store/customer/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_address_created:
      title: store/customer/address/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_address_updated:
      title: store/customer/address/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_address_deleted:
      title: store/customer/address/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_customer_payment_instrument_default_updated:
      title: store/customer/payment/instrument/default/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_*:
      title: store/order/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_created:
      title: store/order/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_updated:
      title: store/order/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_archived:
      title: store/order/archived
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_statusUpdated:
      title: store/order/statusUpdated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_message_created:
      title: store/order/message/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_order_refund_created:
      title: store/order/message/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_product_*:
      title: store/product/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_product_deleted:
      title: store/product/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_product_created:
      title: store/product/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_product_updated:
      title: store/product/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_product_inventory_updated:
      title: store/product/inventory/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_product_inventory_order_updated:
      title: store/product/inventory/order/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_shipment_*:
      title: store/shipment/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_shipment_created:
      title: store/shipment/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_shipment_updated:
      title: store/shipment/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_shipment_deleted:
      title: store/shipment/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_sku_*:
      title: store/sku/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_sku_created:
      title: store/sku/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_sku_updated:
      title: store/sku/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_sku_deleted:
      title: store/sku/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_sku_inventory_updated:
      title: store/sku/inventory/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_sku_inventory_order_updated:
      title: store/sku/inventory/order/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_app_uninstalled:
      title: store/app/uninstalled
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_information_updated:
      title: store/information/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_subscriber_*:
      title: store/subscriber/*
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_subscriber_created:
      title: store/subscriber/created
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_subscriber_updated:
      title: store/subscriber/updated
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    store_subscriber_deleted:
      title: store/subscriber/deleted
      description: |-
        This webhook will fire whenever a new cart is created, either via a storefront shopper adding their first item to the cart, or when a new cart is created via an API consumer. If it is from the storefront, then it fires when the first product is added to a new session.(The cart did not exist before). For the API it means a `POST` to `/carts` (V3 and Storefront API). The `store/cart/updated` hook will also fire.

        ### example callback:

        ```json
        {
          "created_at": 1561482670,
          "store_id": "1025646",
          "producer": "stores/{store_hash}",
          "scope": "store/cart/created",
          "hash": "352e4afc6dd3fc85ea26bfdf3f91852604d57528",
          "data": {
            "type": "cart",
            "id": "09346904-4175-44fd-be53-f7e598531b6c"
          }
        }
        ```

        ### callback schema:
      x-examples:
        example-1:
          $ref: '#/components/examples/store-cart-created'
      allOf:
        - $ref: '#/components/schemas/webhook_callback_base'
        - description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
          properties:
            data:
              type: object
              description: 'A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered.'
              properties:
                type:
                  type: string
                  description: can be `cart` or `cart_line_item`
                id:
                  type: string
                  description: ID of the cart
      x-tags:
        - created
      type: object
    # ! end
    error_Full:
      type: object
      title: error_Full
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      x-internal: true
    errorDetailed_Full:
      type: object
      title: errorDetailed_Full
      properties:
        errors:
          type: object
          additionalProperties:
            type: string
          title: DetailedErrors
      x-internal: true
    webhook_Base:
      type: object
      title: webhook_Base
      properties:
        scope:
          type: string
          example: '`store/order/*`'
          description: Event you subscribe to
        destination:
          type: string
          example: 'https://665b65a6.ngrok.io/webhooks`'
          description: 'URL must be active, return a 200 response, and be served on port 443 (custom ports not currently supported).'
        is_active:
          type: boolean
          example: true
          description: If webhook is active or not
        headers:
          type: object
          description: 'You can pass in any number of custom headers to validate webhooks being returned. '
          properties:
            custom:
              type: string
      required:
        - scope
        - destination
        - is_active
        - headers
      x-internal: true
    webhook_Full:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Id of the webhook
              example: 18048287
            client_id:
              type: string
              description: 'Client ID, unique to the store'
              example: m9r6keqmo7h7f23btnpwernbez1kglkl
            store_hash:
              type: string
              description: 'Store permanent ID. '
              example: sftg45fsd
            created_at:
              type: integer
              example: 1561488106
              description: Created time
            updated_at:
              type: integer
              example: 1561488106
              description: Updated time
        - $ref: '#/components/schemas/webhook_Base'
      title: webhook_Full
      x-internal: true
    Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        offset:
          type: integer
          description: Offset.
        limit:
          type: integer
          description: Total number of items in the result set.
        total_items:
          type: integer
          description: Total number of items.
      x-internal: true
    webhook_callback_base:
      description: ''
      x-examples:
        example-1:
          created_at: 1561482670
          store_id: '1025646'
          producer: 'stores/{store_hash}'
          scope: store/cart/created
          hash: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
      title: ''
      allOf:
        - properties:
            created_at:
              type: integer
              example: 1561482670
              description: Hook creation date as a Unix timestamp.
              readOnly: true
            store_id:
              type: string
              minLength: 1
              example: '1025646'
              description: A numerical identifier that is unique to each store.
            producer:
              type: string
              minLength: 1
              example: 'stores/{store_hash}'
              description: Will always follow the pattern `stores/store_hash`. This is the store that created the webhook.
            scope:
              type: string
              minLength: 1
              example: store/cart/created
              description: 'The [event](/api-docs/getting-started/webhooks/webhook-events) registered when the webhook was created.'
            hash:
              type: string
              minLength: 1
              example: 352e4afc6dd3fc85ea26bfdf3f91852604d57528
              description: The payload data JSON encoded then passed through SH1 encryption.
      type: object
  examples:
    store-cart-created:
      value:
        description: Example shared example
