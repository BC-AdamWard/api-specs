openapi: 3.0.0
info:
  title: Webhooks
  description: |
    Create and manage webhooks to get notified when specific events occur on stores. For more information, [see Webhooks Overview](https://developer.bigcommerce.com/api-docs/store-management/webhooks/overview).

    <!-- type:info -->

    > ### Note
    > * Webhooks endpoints are available on both the V2 and V3 REST API.
  version: ''
  contact: {}
servers:
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3'
    variables:
      $$.env.store_hash:
        default: '{$$.env.store_hash}'
  - url: 'https://api.bigcommerce.com/stores/{$$.env.store_hash}/v2'
    variables:
      $$.env.store_hash:
        default: '{$$.env.store_hash}'
paths:
  /hooks:
    get:
      operationId: getAllWebhooks
      summary: Get Webhooks
      description: |-
        Returns a list of all webhooks on a store associated to the `client_id` used to authenticate the request.

        <!-- type:info -->

        > ### Note
        > * Webhooks endpoints are available on both the V2 and V3 REST API. 
        > * BigCommerce determines the `client_id` from the `access_token`.
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks
    post:
      operationId: createWebhooks
      summary: Create a Webhook
      description: Creates a webhook. Only one webhook at a time can be created. Custom headers can be added. Destination URL must be served on port 443 (custom ports are not currently supported).
      requestBody:
        description: Webhook to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        required: true
      responses:
        '200':
          description: Webhook created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks
    parameters: []
  '/hooks/{webhook_id}':
    get:
      operationId: getWebhook
      summary: Get a Webhook
      description: |
        Returns a webhook by ID.

        <!-- type:info -->

        > ### Note
        > * Webhooks endpoints are available on both the V2 and V3 REST API.
      parameters:
        - $ref: '#/components/parameters/WebhookId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Webhook with specified id doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks
    put:
      operationId: updateAWebhook
      summary: Update a Webhook
      description: Updates a webhook. Custom headers can be added.
      parameters:
        - $ref: '#/components/parameters/WebhookId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        x-examples:
          application/json:
            destination: 'https://myapp.herokuapp.com/'
            headers:
              Password: Goodbye
              User-Name: Hello
            is_active: true
            scope: store/cart/lineItem/*
        required: true
      responses:
        '200':
          description: Webhook updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Webhook with specified id doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks
    delete:
      operationId: deleteAWebhook
      summary: Delete a Webhook
      description: 'Deletes a webhook. Only one webhook at a time can be deleted. When a webhook is deleted, it is returned in the response as a `200` OK.'
      parameters:
        - $ref: '#/components/parameters/WebhookId'
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: Webhook deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Webhook with specified id doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks
    parameters: []
  /hooks/admin:
    get:
      operationId: getHooksAdmin
      summary: Get Admin Info
      description: |-
        List all notification emails, webhooks and blacklisted domains associated with the API user.

        <!-- type:info -->

        > ### Note
        > * Webhooks endpoints are available on both the V2 and V3 REST API.
      parameters:
        - name: active
          in: query
          description: Enables user to filter for webhooks that are active or not.
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      emails:
                        description: Email addresses to be sent notifications.
                        type: array
                        items:
                          type: string
                          format: email
                      hooks_list:
                        description: 'List of all the webhooks associated with the provider API User account, filtered by ''active'' parameter.'
                        type: array
                        items:
                          $ref: '#/components/schemas/Webhook'
                      blacklisted_domains:
                        description: List of domains (destinations) that are currently on the blacklist and are not being sent webhooks.
                        type: array
                        items:
                          type: object
                          properties:
                            destination:
                              description: Domain URL to which webhooks are sent.
                              type: string
                              format: url
                            time_left:
                              description: Remaining time in seconds that the domain is on the blacklist.
                              type: integer
                  meta:
                    type: object
              examples:
                V3:
                  value:
                    data:
                      emails:
                        - user@example.com
                      hooks_list:
                        - id: 0
                          client_id: string
                          store_hash: string
                          scope: /scope/produst/created
                          destination: string
                          headers:
                            property1: string
                            property2: string
                          is_active: true
                          created_at: 0
                          updated_at: 0
                      blacklisted_domains:
                        - destination: string
                          time_left: 0
                    meta: {}
                V2:
                  value:
                    emails:
                      - user@example.com
                    hooks_list:
                      - id: 0
                        client_id: string
                        store_hash: string
                        scope: /scope/produst/created
                        destination: string
                        headers:
                          property1: string
                          property2: string
                        is_active: true
                        created_at: 0
                        updated_at: 0
                    blacklisted_domains:
                      - destination: string
                        time_left: 0
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks Admin
        - Beta
    put:
      operationId: putHooksAdmin
      summary: Update Email Notifications
      description: |
        Update email addresses to which notification emails will be sent when any domain associated with the API user is blacklisted or when a webhook is deactivated. Supports `upsert` functionality in the case that no email address exists yet.

        <!-- type:info -->

        > ### Note
        > * Webhooks endpoints are available on both the V2 and V3 REST API.
      requestBody:
        description: List of notification emails.
        content:
          application/json:
            schema:
              type: object
              properties:
                emails:
                  type: array
                  items:
                    type: string
                    format: email
            examples:
              Example:
                value:
                  emails:
                    - user@example.com
        required: true
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  meta:
                    type: object
              examples:
                V3:
                  value:
                    data:
                      emails:
                        - email2@bigcommerce.com
                    meta: {}
                V2:
                  value:
                    emails:
                      - email2@bigcommerce.com
        '400':
          description: Bad request.
        '401':
          description: Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid JSON request body - missing or invalid data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Webhooks Admin
    parameters: []
components:
  parameters:
    WebhookId:
      name: webhook_id
      in: path
      description: The ID of a Webhook.
      required: true
      schema:
        type: integer
    Accept:
      in: header
      name: Accept
      schema:
        type: string
        default: application/json
    Content-Type:
      in: header
      name: Content-Type
      schema:
        type: string
        default: application/json
  schemas:
    Webhook:
      type: object
      properties:
        id:
          description: Unique ID of Webhook.
          type: integer
          format: int32
        client_id:
          description: 'API User Client ID, unique to the store.'
          type: string
        store_hash:
          description: Unique Hash of the store.
          type: string
        scope:
          description: The event that the webhook is subscribed to.
          type: string
          example: /scope/produst/created
          pattern: '/scope/{domain}/{action}'
        destination:
          description: URL to which the webhook is sent.
          type: string
          format: url
        headers:
          description: Custom headers to be included in destination url request.
          type: object
          additionalProperties:
            type: string
        is_active:
          description: Identifies whether webhook is active.
          type: boolean
        created_at:
          description: UTC timestamp in seconds that the webhook was created.
          type: integer
          format: int64
        updated_at:
          description: UTC timestamp in seconds that the webhook was last updated.
          type: integer
          format: int64
    WebhookCreate:
      type: object
      properties:
        scope:
          description: The scope for which events will be triggered.
          type: string
          example: /scope/produst/created
          pattern: '/scope/{domain}/{action}'
        destination:
          description: Destination url.
          type: string
          format: url
        headers:
          description: Headers to be included in destination url request.
          type: object
          additionalProperties:
            type: string
        is_active:
          description: Identifies whether webhook is active.
          type: boolean
    WebhookResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookCreate'
        meta:
          type: object
    Pagination:
      description: |
        Data about the response, including pagination and collection totals.
      type: object
      properties:
        offset:
          description: Offset.
          type: integer
        limit:
          description: Total number of items in the result set.
          type: integer
        total_items:
          description: Total number of items.
          type: integer
    DetailedErrors:
      type: object
      additionalProperties:
        type: string
    BaseError:
      description: |
        Error payload for the BigCommerce API.
      type: object
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            errors:
              $ref: '#/components/schemas/DetailedErrors'
  securitySchemes:
    X-Auth-Token:
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  - | - | - |

        **Note**: Creating and mangaing webhooks require the default scope used when an API User account is created.

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{$$.env.store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
      in: header
      name: X-Auth-Token
      type: apiKey
tags:
  - name: Webhooks
  - name: Webhooks Admin
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
